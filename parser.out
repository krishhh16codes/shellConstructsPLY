Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CASE
    COPROC
    EQUALTO
    ESAC
    EXCLAMATION_MARK
    FUNCTION
    GREATERTHAN
    LESSTHAN
    SELECT
    SPACE
    TIME
    UNTIL

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statement
Rule 3     statements -> statements statement
Rule 4     assignment -> ID EQUALS expression
Rule 5     assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
Rule 6     expression -> NUMBER
Rule 7     expression -> STRING
Rule 8     expression -> ID
Rule 9     expression -> DOLLAR ID
Rule 10    expression -> MINUS expression
Rule 11    expression -> NUMBER expression
Rule 12    expression -> expression NUMBER
Rule 13    expression -> expression NUMBER expression
Rule 14    expression -> DOLLAR ID expression
Rule 15    expression -> expression DOLLAR ID
Rule 16    expression -> expression DOLLAR ID expression
Rule 17    expression -> LPAREN expression RPAREN
Rule 18    statement -> while_statement
Rule 19    statement -> if_statement
Rule 20    statement -> for_statement
Rule 21    statement -> command
Rule 22    statement -> condition
Rule 23    statement -> assignment
Rule 24    statement -> comment
Rule 25    statement -> arithmetic_expression
Rule 26    statement -> insertion
Rule 27    statement -> pipe_command
Rule 28    command -> ID
Rule 29    command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
Rule 30    command -> command ID
Rule 31    command -> command NUMBER
Rule 32    command -> command STRING
Rule 33    command -> command MINUS ID
Rule 34    command -> command MINUS MINUS ID
Rule 35    comment -> HASHTAG ID
Rule 36    insertion -> command ID INSERTION ID
Rule 37    insertion -> command STRING INSERTION ID
Rule 38    pipe_command -> command PIPE command
Rule 39    while_statement -> WHILE condition SEMICOLON DO statements DONE
Rule 40    condition -> LEFT_BRACKET expression RIGHT_BRACKET
Rule 41    condition -> CLEFT_BRACKET expression CRIGHT_BRACKET
Rule 42    arithmetic_expression -> NUMBER
Rule 43    arithmetic_expression -> DOLLAR ID
Rule 44    arithmetic_expression -> ID
Rule 45    arithmetic_expression -> LPAREN arithmetic_expression RPAREN
Rule 46    arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression
Rule 47    arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression
Rule 48    arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression
Rule 49    arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression
Rule 50    arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression
Rule 51    arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression
Rule 52    arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression
Rule 53    arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression
Rule 54    for_statement -> FOR ID IN command DO statements DONE
Rule 55    if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI
Rule 56    if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI

Terminals, with rules where they appear

AND                  : 
CASE                 : 
CLEFT_BRACKET        : 41
COPROC               : 
CRIGHT_BRACKET       : 41
DIVIDE               : 49 53
DO                   : 39 54
DOLLAR               : 5 9 14 15 16 43
DONE                 : 39 54
DOT                  : 29 29
ELIF                 : 56
ELSE                 : 55 56
EQUALS               : 4 5 50 51 52 53
EQUALTO              : 
ESAC                 : 
EXCLAMATION_MARK     : 
FI                   : 55 56
FOR                  : 54
FUNCTION             : 
GREATERTHAN          : 
HASHTAG              : 35
ID                   : 4 5 8 9 14 15 16 28 30 33 34 35 36 36 37 43 44 54
IF                   : 55 56
IN                   : 54
INSERTION            : 36 37
LEFT_BRACE           : 29
LEFT_BRACKET         : 40
LESSTHAN             : 
LPAREN               : 5 17 45
MINUS                : 10 33 34 34 47 51
NUMBER               : 6 11 12 13 29 29 31 42
PIPE                 : 38
PLUS                 : 46 50
RIGHT_BRACE          : 29
RIGHT_BRACKET        : 40
RPAREN               : 5 17 45
SELECT               : 
SEMICOLON            : 39 55 56 56
SPACE                : 
STRING               : 7 32 37
THEN                 : 55 56 56
TIME                 : 
TIMES                : 48 52
UNTIL                : 
WHILE                : 39
error                : 

Nonterminals, with rules where they appear

arithmetic_expression : 5 25 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53
assignment           : 23
command              : 21 30 31 32 33 34 36 37 38 38 54
comment              : 24
condition            : 22 39 55 56 56
expression           : 4 10 11 12 13 13 14 15 16 16 17 40 41
for_statement        : 20
if_statement         : 19
insertion            : 26
pipe_command         : 27
program              : 0
statement            : 2 3
statements           : 1 3 39 54 55 55 56 56 56
while_statement      : 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statement
    (3) statements -> . statements statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    command                        shift and go to state 7
    condition                      shift and go to state 8
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (3) statements -> statements . statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    $end            reduce using rule 1 (program -> statements .)
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    statement                      shift and go to state 25
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    command                        shift and go to state 7
    condition                      shift and go to state 8
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 3

    (2) statements -> statement .

    WHILE           reduce using rule 2 (statements -> statement .)
    IF              reduce using rule 2 (statements -> statement .)
    FOR             reduce using rule 2 (statements -> statement .)
    ID              reduce using rule 2 (statements -> statement .)
    LEFT_BRACE      reduce using rule 2 (statements -> statement .)
    LEFT_BRACKET    reduce using rule 2 (statements -> statement .)
    CLEFT_BRACKET   reduce using rule 2 (statements -> statement .)
    HASHTAG         reduce using rule 2 (statements -> statement .)
    NUMBER          reduce using rule 2 (statements -> statement .)
    DOLLAR          reduce using rule 2 (statements -> statement .)
    LPAREN          reduce using rule 2 (statements -> statement .)
    $end            reduce using rule 2 (statements -> statement .)
    DONE            reduce using rule 2 (statements -> statement .)
    ELSE            reduce using rule 2 (statements -> statement .)
    ELIF            reduce using rule 2 (statements -> statement .)
    FI              reduce using rule 2 (statements -> statement .)


state 4

    (18) statement -> while_statement .

    WHILE           reduce using rule 18 (statement -> while_statement .)
    IF              reduce using rule 18 (statement -> while_statement .)
    FOR             reduce using rule 18 (statement -> while_statement .)
    ID              reduce using rule 18 (statement -> while_statement .)
    LEFT_BRACE      reduce using rule 18 (statement -> while_statement .)
    LEFT_BRACKET    reduce using rule 18 (statement -> while_statement .)
    CLEFT_BRACKET   reduce using rule 18 (statement -> while_statement .)
    HASHTAG         reduce using rule 18 (statement -> while_statement .)
    NUMBER          reduce using rule 18 (statement -> while_statement .)
    DOLLAR          reduce using rule 18 (statement -> while_statement .)
    LPAREN          reduce using rule 18 (statement -> while_statement .)
    $end            reduce using rule 18 (statement -> while_statement .)
    DONE            reduce using rule 18 (statement -> while_statement .)
    ELSE            reduce using rule 18 (statement -> while_statement .)
    ELIF            reduce using rule 18 (statement -> while_statement .)
    FI              reduce using rule 18 (statement -> while_statement .)


state 5

    (19) statement -> if_statement .

    WHILE           reduce using rule 19 (statement -> if_statement .)
    IF              reduce using rule 19 (statement -> if_statement .)
    FOR             reduce using rule 19 (statement -> if_statement .)
    ID              reduce using rule 19 (statement -> if_statement .)
    LEFT_BRACE      reduce using rule 19 (statement -> if_statement .)
    LEFT_BRACKET    reduce using rule 19 (statement -> if_statement .)
    CLEFT_BRACKET   reduce using rule 19 (statement -> if_statement .)
    HASHTAG         reduce using rule 19 (statement -> if_statement .)
    NUMBER          reduce using rule 19 (statement -> if_statement .)
    DOLLAR          reduce using rule 19 (statement -> if_statement .)
    LPAREN          reduce using rule 19 (statement -> if_statement .)
    $end            reduce using rule 19 (statement -> if_statement .)
    DONE            reduce using rule 19 (statement -> if_statement .)
    ELSE            reduce using rule 19 (statement -> if_statement .)
    ELIF            reduce using rule 19 (statement -> if_statement .)
    FI              reduce using rule 19 (statement -> if_statement .)


state 6

    (20) statement -> for_statement .

    WHILE           reduce using rule 20 (statement -> for_statement .)
    IF              reduce using rule 20 (statement -> for_statement .)
    FOR             reduce using rule 20 (statement -> for_statement .)
    ID              reduce using rule 20 (statement -> for_statement .)
    LEFT_BRACE      reduce using rule 20 (statement -> for_statement .)
    LEFT_BRACKET    reduce using rule 20 (statement -> for_statement .)
    CLEFT_BRACKET   reduce using rule 20 (statement -> for_statement .)
    HASHTAG         reduce using rule 20 (statement -> for_statement .)
    NUMBER          reduce using rule 20 (statement -> for_statement .)
    DOLLAR          reduce using rule 20 (statement -> for_statement .)
    LPAREN          reduce using rule 20 (statement -> for_statement .)
    $end            reduce using rule 20 (statement -> for_statement .)
    DONE            reduce using rule 20 (statement -> for_statement .)
    ELSE            reduce using rule 20 (statement -> for_statement .)
    ELIF            reduce using rule 20 (statement -> for_statement .)
    FI              reduce using rule 20 (statement -> for_statement .)


state 7

    (21) statement -> command .
    (30) command -> command . ID
    (31) command -> command . NUMBER
    (32) command -> command . STRING
    (33) command -> command . MINUS ID
    (34) command -> command . MINUS MINUS ID
    (36) insertion -> command . ID INSERTION ID
    (37) insertion -> command . STRING INSERTION ID
    (38) pipe_command -> command . PIPE command

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    WHILE           reduce using rule 21 (statement -> command .)
    IF              reduce using rule 21 (statement -> command .)
    FOR             reduce using rule 21 (statement -> command .)
    LEFT_BRACE      reduce using rule 21 (statement -> command .)
    LEFT_BRACKET    reduce using rule 21 (statement -> command .)
    CLEFT_BRACKET   reduce using rule 21 (statement -> command .)
    HASHTAG         reduce using rule 21 (statement -> command .)
    DOLLAR          reduce using rule 21 (statement -> command .)
    LPAREN          reduce using rule 21 (statement -> command .)
    $end            reduce using rule 21 (statement -> command .)
    DONE            reduce using rule 21 (statement -> command .)
    ELSE            reduce using rule 21 (statement -> command .)
    ELIF            reduce using rule 21 (statement -> command .)
    FI              reduce using rule 21 (statement -> command .)
    ID              shift and go to state 26
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    MINUS           shift and go to state 29
    PIPE            shift and go to state 30

  ! ID              [ reduce using rule 21 (statement -> command .) ]
  ! NUMBER          [ reduce using rule 21 (statement -> command .) ]


state 8

    (22) statement -> condition .

    WHILE           reduce using rule 22 (statement -> condition .)
    IF              reduce using rule 22 (statement -> condition .)
    FOR             reduce using rule 22 (statement -> condition .)
    ID              reduce using rule 22 (statement -> condition .)
    LEFT_BRACE      reduce using rule 22 (statement -> condition .)
    LEFT_BRACKET    reduce using rule 22 (statement -> condition .)
    CLEFT_BRACKET   reduce using rule 22 (statement -> condition .)
    HASHTAG         reduce using rule 22 (statement -> condition .)
    NUMBER          reduce using rule 22 (statement -> condition .)
    DOLLAR          reduce using rule 22 (statement -> condition .)
    LPAREN          reduce using rule 22 (statement -> condition .)
    $end            reduce using rule 22 (statement -> condition .)
    DONE            reduce using rule 22 (statement -> condition .)
    ELSE            reduce using rule 22 (statement -> condition .)
    ELIF            reduce using rule 22 (statement -> condition .)
    FI              reduce using rule 22 (statement -> condition .)


state 9

    (23) statement -> assignment .

    WHILE           reduce using rule 23 (statement -> assignment .)
    IF              reduce using rule 23 (statement -> assignment .)
    FOR             reduce using rule 23 (statement -> assignment .)
    ID              reduce using rule 23 (statement -> assignment .)
    LEFT_BRACE      reduce using rule 23 (statement -> assignment .)
    LEFT_BRACKET    reduce using rule 23 (statement -> assignment .)
    CLEFT_BRACKET   reduce using rule 23 (statement -> assignment .)
    HASHTAG         reduce using rule 23 (statement -> assignment .)
    NUMBER          reduce using rule 23 (statement -> assignment .)
    DOLLAR          reduce using rule 23 (statement -> assignment .)
    LPAREN          reduce using rule 23 (statement -> assignment .)
    $end            reduce using rule 23 (statement -> assignment .)
    DONE            reduce using rule 23 (statement -> assignment .)
    ELSE            reduce using rule 23 (statement -> assignment .)
    ELIF            reduce using rule 23 (statement -> assignment .)
    FI              reduce using rule 23 (statement -> assignment .)


state 10

    (24) statement -> comment .

    WHILE           reduce using rule 24 (statement -> comment .)
    IF              reduce using rule 24 (statement -> comment .)
    FOR             reduce using rule 24 (statement -> comment .)
    ID              reduce using rule 24 (statement -> comment .)
    LEFT_BRACE      reduce using rule 24 (statement -> comment .)
    LEFT_BRACKET    reduce using rule 24 (statement -> comment .)
    CLEFT_BRACKET   reduce using rule 24 (statement -> comment .)
    HASHTAG         reduce using rule 24 (statement -> comment .)
    NUMBER          reduce using rule 24 (statement -> comment .)
    DOLLAR          reduce using rule 24 (statement -> comment .)
    LPAREN          reduce using rule 24 (statement -> comment .)
    $end            reduce using rule 24 (statement -> comment .)
    DONE            reduce using rule 24 (statement -> comment .)
    ELSE            reduce using rule 24 (statement -> comment .)
    ELIF            reduce using rule 24 (statement -> comment .)
    FI              reduce using rule 24 (statement -> comment .)


state 11

    (25) statement -> arithmetic_expression .
    (46) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (47) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (48) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (49) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (50) arithmetic_expression -> arithmetic_expression . PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> arithmetic_expression . MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> arithmetic_expression . TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> arithmetic_expression . DIVIDE EQUALS arithmetic_expression

    WHILE           reduce using rule 25 (statement -> arithmetic_expression .)
    IF              reduce using rule 25 (statement -> arithmetic_expression .)
    FOR             reduce using rule 25 (statement -> arithmetic_expression .)
    ID              reduce using rule 25 (statement -> arithmetic_expression .)
    LEFT_BRACE      reduce using rule 25 (statement -> arithmetic_expression .)
    LEFT_BRACKET    reduce using rule 25 (statement -> arithmetic_expression .)
    CLEFT_BRACKET   reduce using rule 25 (statement -> arithmetic_expression .)
    HASHTAG         reduce using rule 25 (statement -> arithmetic_expression .)
    NUMBER          reduce using rule 25 (statement -> arithmetic_expression .)
    DOLLAR          reduce using rule 25 (statement -> arithmetic_expression .)
    LPAREN          reduce using rule 25 (statement -> arithmetic_expression .)
    $end            reduce using rule 25 (statement -> arithmetic_expression .)
    DONE            reduce using rule 25 (statement -> arithmetic_expression .)
    ELSE            reduce using rule 25 (statement -> arithmetic_expression .)
    ELIF            reduce using rule 25 (statement -> arithmetic_expression .)
    FI              reduce using rule 25 (statement -> arithmetic_expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34


state 12

    (26) statement -> insertion .

    WHILE           reduce using rule 26 (statement -> insertion .)
    IF              reduce using rule 26 (statement -> insertion .)
    FOR             reduce using rule 26 (statement -> insertion .)
    ID              reduce using rule 26 (statement -> insertion .)
    LEFT_BRACE      reduce using rule 26 (statement -> insertion .)
    LEFT_BRACKET    reduce using rule 26 (statement -> insertion .)
    CLEFT_BRACKET   reduce using rule 26 (statement -> insertion .)
    HASHTAG         reduce using rule 26 (statement -> insertion .)
    NUMBER          reduce using rule 26 (statement -> insertion .)
    DOLLAR          reduce using rule 26 (statement -> insertion .)
    LPAREN          reduce using rule 26 (statement -> insertion .)
    $end            reduce using rule 26 (statement -> insertion .)
    DONE            reduce using rule 26 (statement -> insertion .)
    ELSE            reduce using rule 26 (statement -> insertion .)
    ELIF            reduce using rule 26 (statement -> insertion .)
    FI              reduce using rule 26 (statement -> insertion .)


state 13

    (27) statement -> pipe_command .

    WHILE           reduce using rule 27 (statement -> pipe_command .)
    IF              reduce using rule 27 (statement -> pipe_command .)
    FOR             reduce using rule 27 (statement -> pipe_command .)
    ID              reduce using rule 27 (statement -> pipe_command .)
    LEFT_BRACE      reduce using rule 27 (statement -> pipe_command .)
    LEFT_BRACKET    reduce using rule 27 (statement -> pipe_command .)
    CLEFT_BRACKET   reduce using rule 27 (statement -> pipe_command .)
    HASHTAG         reduce using rule 27 (statement -> pipe_command .)
    NUMBER          reduce using rule 27 (statement -> pipe_command .)
    DOLLAR          reduce using rule 27 (statement -> pipe_command .)
    LPAREN          reduce using rule 27 (statement -> pipe_command .)
    $end            reduce using rule 27 (statement -> pipe_command .)
    DONE            reduce using rule 27 (statement -> pipe_command .)
    ELSE            reduce using rule 27 (statement -> pipe_command .)
    ELIF            reduce using rule 27 (statement -> pipe_command .)
    FI              reduce using rule 27 (statement -> pipe_command .)


state 14

    (39) while_statement -> WHILE . condition SEMICOLON DO statements DONE
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21

    condition                      shift and go to state 35

state 15

    (55) if_statement -> IF . condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> IF . condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21

    condition                      shift and go to state 36

state 16

    (54) for_statement -> FOR . ID IN command DO statements DONE

    ID              shift and go to state 37


state 17

    (28) command -> ID .
    (4) assignment -> ID . EQUALS expression
    (5) assignment -> ID . EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (44) arithmetic_expression -> ID .

  ! reduce/reduce conflict for MINUS resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for WHILE resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for IF resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for FOR resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for ID resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for LEFT_BRACE resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for LEFT_BRACKET resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for CLEFT_BRACKET resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for HASHTAG resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for NUMBER resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for DOLLAR resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for LPAREN resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for $end resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for DONE resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for ELSE resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for ELIF resolved using rule 28 (command -> ID .)
  ! reduce/reduce conflict for FI resolved using rule 28 (command -> ID .)
    ID              reduce using rule 28 (command -> ID .)
    NUMBER          reduce using rule 28 (command -> ID .)
    STRING          reduce using rule 28 (command -> ID .)
    MINUS           reduce using rule 28 (command -> ID .)
    PIPE            reduce using rule 28 (command -> ID .)
    WHILE           reduce using rule 28 (command -> ID .)
    IF              reduce using rule 28 (command -> ID .)
    FOR             reduce using rule 28 (command -> ID .)
    LEFT_BRACE      reduce using rule 28 (command -> ID .)
    LEFT_BRACKET    reduce using rule 28 (command -> ID .)
    CLEFT_BRACKET   reduce using rule 28 (command -> ID .)
    HASHTAG         reduce using rule 28 (command -> ID .)
    DOLLAR          reduce using rule 28 (command -> ID .)
    LPAREN          reduce using rule 28 (command -> ID .)
    $end            reduce using rule 28 (command -> ID .)
    DONE            reduce using rule 28 (command -> ID .)
    ELSE            reduce using rule 28 (command -> ID .)
    ELIF            reduce using rule 28 (command -> ID .)
    FI              reduce using rule 28 (command -> ID .)
    EQUALS          shift and go to state 38
    PLUS            reduce using rule 44 (arithmetic_expression -> ID .)
    TIMES           reduce using rule 44 (arithmetic_expression -> ID .)
    DIVIDE          reduce using rule 44 (arithmetic_expression -> ID .)

  ! MINUS           [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! WHILE           [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! IF              [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! FOR             [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! ID              [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! LEFT_BRACE      [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! LEFT_BRACKET    [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! CLEFT_BRACKET   [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! HASHTAG         [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! NUMBER          [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! DOLLAR          [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! LPAREN          [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! $end            [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! DONE            [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! ELSE            [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! ELIF            [ reduce using rule 44 (arithmetic_expression -> ID .) ]
  ! FI              [ reduce using rule 44 (arithmetic_expression -> ID .) ]


state 18

    (29) command -> LEFT_BRACE . NUMBER DOT DOT NUMBER RIGHT_BRACE

    NUMBER          shift and go to state 39


state 19

    (42) arithmetic_expression -> NUMBER .

    PLUS            reduce using rule 42 (arithmetic_expression -> NUMBER .)
    MINUS           reduce using rule 42 (arithmetic_expression -> NUMBER .)
    TIMES           reduce using rule 42 (arithmetic_expression -> NUMBER .)
    DIVIDE          reduce using rule 42 (arithmetic_expression -> NUMBER .)
    WHILE           reduce using rule 42 (arithmetic_expression -> NUMBER .)
    IF              reduce using rule 42 (arithmetic_expression -> NUMBER .)
    FOR             reduce using rule 42 (arithmetic_expression -> NUMBER .)
    ID              reduce using rule 42 (arithmetic_expression -> NUMBER .)
    LEFT_BRACE      reduce using rule 42 (arithmetic_expression -> NUMBER .)
    LEFT_BRACKET    reduce using rule 42 (arithmetic_expression -> NUMBER .)
    CLEFT_BRACKET   reduce using rule 42 (arithmetic_expression -> NUMBER .)
    HASHTAG         reduce using rule 42 (arithmetic_expression -> NUMBER .)
    NUMBER          reduce using rule 42 (arithmetic_expression -> NUMBER .)
    DOLLAR          reduce using rule 42 (arithmetic_expression -> NUMBER .)
    LPAREN          reduce using rule 42 (arithmetic_expression -> NUMBER .)
    $end            reduce using rule 42 (arithmetic_expression -> NUMBER .)
    RPAREN          reduce using rule 42 (arithmetic_expression -> NUMBER .)
    DONE            reduce using rule 42 (arithmetic_expression -> NUMBER .)
    ELSE            reduce using rule 42 (arithmetic_expression -> NUMBER .)
    ELIF            reduce using rule 42 (arithmetic_expression -> NUMBER .)
    FI              reduce using rule 42 (arithmetic_expression -> NUMBER .)


state 20

    (40) condition -> LEFT_BRACKET . expression RIGHT_BRACKET
    (6) expression -> . NUMBER
    (7) expression -> . STRING
    (8) expression -> . ID
    (9) expression -> . DOLLAR ID
    (10) expression -> . MINUS expression
    (11) expression -> . NUMBER expression
    (12) expression -> . expression NUMBER
    (13) expression -> . expression NUMBER expression
    (14) expression -> . DOLLAR ID expression
    (15) expression -> . expression DOLLAR ID
    (16) expression -> . expression DOLLAR ID expression
    (17) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    ID              shift and go to state 43
    DOLLAR          shift and go to state 44
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46

    expression                     shift and go to state 40

state 21

    (41) condition -> CLEFT_BRACKET . expression CRIGHT_BRACKET
    (6) expression -> . NUMBER
    (7) expression -> . STRING
    (8) expression -> . ID
    (9) expression -> . DOLLAR ID
    (10) expression -> . MINUS expression
    (11) expression -> . NUMBER expression
    (12) expression -> . expression NUMBER
    (13) expression -> . expression NUMBER expression
    (14) expression -> . DOLLAR ID expression
    (15) expression -> . expression DOLLAR ID
    (16) expression -> . expression DOLLAR ID expression
    (17) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    ID              shift and go to state 43
    DOLLAR          shift and go to state 44
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46

    expression                     shift and go to state 47

state 22

    (43) arithmetic_expression -> DOLLAR . ID

    ID              shift and go to state 48


state 23

    (45) arithmetic_expression -> LPAREN . arithmetic_expression RPAREN
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression

    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    ID              shift and go to state 50
    LPAREN          shift and go to state 23

    arithmetic_expression          shift and go to state 49

state 24

    (35) comment -> HASHTAG . ID

    ID              shift and go to state 51


state 25

    (3) statements -> statements statement .

    WHILE           reduce using rule 3 (statements -> statements statement .)
    IF              reduce using rule 3 (statements -> statements statement .)
    FOR             reduce using rule 3 (statements -> statements statement .)
    ID              reduce using rule 3 (statements -> statements statement .)
    LEFT_BRACE      reduce using rule 3 (statements -> statements statement .)
    LEFT_BRACKET    reduce using rule 3 (statements -> statements statement .)
    CLEFT_BRACKET   reduce using rule 3 (statements -> statements statement .)
    HASHTAG         reduce using rule 3 (statements -> statements statement .)
    NUMBER          reduce using rule 3 (statements -> statements statement .)
    DOLLAR          reduce using rule 3 (statements -> statements statement .)
    LPAREN          reduce using rule 3 (statements -> statements statement .)
    $end            reduce using rule 3 (statements -> statements statement .)
    DONE            reduce using rule 3 (statements -> statements statement .)
    ELSE            reduce using rule 3 (statements -> statements statement .)
    ELIF            reduce using rule 3 (statements -> statements statement .)
    FI              reduce using rule 3 (statements -> statements statement .)


state 26

    (30) command -> command ID .
    (36) insertion -> command ID . INSERTION ID

    ID              reduce using rule 30 (command -> command ID .)
    NUMBER          reduce using rule 30 (command -> command ID .)
    STRING          reduce using rule 30 (command -> command ID .)
    MINUS           reduce using rule 30 (command -> command ID .)
    PIPE            reduce using rule 30 (command -> command ID .)
    WHILE           reduce using rule 30 (command -> command ID .)
    IF              reduce using rule 30 (command -> command ID .)
    FOR             reduce using rule 30 (command -> command ID .)
    LEFT_BRACE      reduce using rule 30 (command -> command ID .)
    LEFT_BRACKET    reduce using rule 30 (command -> command ID .)
    CLEFT_BRACKET   reduce using rule 30 (command -> command ID .)
    HASHTAG         reduce using rule 30 (command -> command ID .)
    DOLLAR          reduce using rule 30 (command -> command ID .)
    LPAREN          reduce using rule 30 (command -> command ID .)
    $end            reduce using rule 30 (command -> command ID .)
    DONE            reduce using rule 30 (command -> command ID .)
    ELSE            reduce using rule 30 (command -> command ID .)
    ELIF            reduce using rule 30 (command -> command ID .)
    FI              reduce using rule 30 (command -> command ID .)
    INSERTION       shift and go to state 52


state 27

    (31) command -> command NUMBER .

    ID              reduce using rule 31 (command -> command NUMBER .)
    NUMBER          reduce using rule 31 (command -> command NUMBER .)
    STRING          reduce using rule 31 (command -> command NUMBER .)
    MINUS           reduce using rule 31 (command -> command NUMBER .)
    PIPE            reduce using rule 31 (command -> command NUMBER .)
    WHILE           reduce using rule 31 (command -> command NUMBER .)
    IF              reduce using rule 31 (command -> command NUMBER .)
    FOR             reduce using rule 31 (command -> command NUMBER .)
    LEFT_BRACE      reduce using rule 31 (command -> command NUMBER .)
    LEFT_BRACKET    reduce using rule 31 (command -> command NUMBER .)
    CLEFT_BRACKET   reduce using rule 31 (command -> command NUMBER .)
    HASHTAG         reduce using rule 31 (command -> command NUMBER .)
    DOLLAR          reduce using rule 31 (command -> command NUMBER .)
    LPAREN          reduce using rule 31 (command -> command NUMBER .)
    $end            reduce using rule 31 (command -> command NUMBER .)
    DONE            reduce using rule 31 (command -> command NUMBER .)
    ELSE            reduce using rule 31 (command -> command NUMBER .)
    ELIF            reduce using rule 31 (command -> command NUMBER .)
    FI              reduce using rule 31 (command -> command NUMBER .)
    DO              reduce using rule 31 (command -> command NUMBER .)


state 28

    (32) command -> command STRING .
    (37) insertion -> command STRING . INSERTION ID

    ID              reduce using rule 32 (command -> command STRING .)
    NUMBER          reduce using rule 32 (command -> command STRING .)
    STRING          reduce using rule 32 (command -> command STRING .)
    MINUS           reduce using rule 32 (command -> command STRING .)
    PIPE            reduce using rule 32 (command -> command STRING .)
    WHILE           reduce using rule 32 (command -> command STRING .)
    IF              reduce using rule 32 (command -> command STRING .)
    FOR             reduce using rule 32 (command -> command STRING .)
    LEFT_BRACE      reduce using rule 32 (command -> command STRING .)
    LEFT_BRACKET    reduce using rule 32 (command -> command STRING .)
    CLEFT_BRACKET   reduce using rule 32 (command -> command STRING .)
    HASHTAG         reduce using rule 32 (command -> command STRING .)
    DOLLAR          reduce using rule 32 (command -> command STRING .)
    LPAREN          reduce using rule 32 (command -> command STRING .)
    $end            reduce using rule 32 (command -> command STRING .)
    DONE            reduce using rule 32 (command -> command STRING .)
    ELSE            reduce using rule 32 (command -> command STRING .)
    ELIF            reduce using rule 32 (command -> command STRING .)
    FI              reduce using rule 32 (command -> command STRING .)
    INSERTION       shift and go to state 53


state 29

    (33) command -> command MINUS . ID
    (34) command -> command MINUS . MINUS ID

    ID              shift and go to state 55
    MINUS           shift and go to state 54


state 30

    (38) pipe_command -> command PIPE . command
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID

    ID              shift and go to state 57
    LEFT_BRACE      shift and go to state 18

    command                        shift and go to state 56

state 31

    (46) arithmetic_expression -> arithmetic_expression PLUS . arithmetic_expression
    (50) arithmetic_expression -> arithmetic_expression PLUS . EQUALS arithmetic_expression
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression

    EQUALS          shift and go to state 59
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    ID              shift and go to state 50
    LPAREN          shift and go to state 23

    arithmetic_expression          shift and go to state 58

state 32

    (47) arithmetic_expression -> arithmetic_expression MINUS . arithmetic_expression
    (51) arithmetic_expression -> arithmetic_expression MINUS . EQUALS arithmetic_expression
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression

    EQUALS          shift and go to state 61
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    ID              shift and go to state 50
    LPAREN          shift and go to state 23

    arithmetic_expression          shift and go to state 60

state 33

    (48) arithmetic_expression -> arithmetic_expression TIMES . arithmetic_expression
    (52) arithmetic_expression -> arithmetic_expression TIMES . EQUALS arithmetic_expression
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression

    EQUALS          shift and go to state 63
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    ID              shift and go to state 50
    LPAREN          shift and go to state 23

    arithmetic_expression          shift and go to state 62

state 34

    (49) arithmetic_expression -> arithmetic_expression DIVIDE . arithmetic_expression
    (53) arithmetic_expression -> arithmetic_expression DIVIDE . EQUALS arithmetic_expression
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression

    EQUALS          shift and go to state 65
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    ID              shift and go to state 50
    LPAREN          shift and go to state 23

    arithmetic_expression          shift and go to state 64

state 35

    (39) while_statement -> WHILE condition . SEMICOLON DO statements DONE

    SEMICOLON       shift and go to state 66


state 36

    (55) if_statement -> IF condition . SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> IF condition . SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI

    SEMICOLON       shift and go to state 67


state 37

    (54) for_statement -> FOR ID . IN command DO statements DONE

    IN              shift and go to state 68


state 38

    (4) assignment -> ID EQUALS . expression
    (5) assignment -> ID EQUALS . DOLLAR LPAREN arithmetic_expression RPAREN
    (6) expression -> . NUMBER
    (7) expression -> . STRING
    (8) expression -> . ID
    (9) expression -> . DOLLAR ID
    (10) expression -> . MINUS expression
    (11) expression -> . NUMBER expression
    (12) expression -> . expression NUMBER
    (13) expression -> . expression NUMBER expression
    (14) expression -> . DOLLAR ID expression
    (15) expression -> . expression DOLLAR ID
    (16) expression -> . expression DOLLAR ID expression
    (17) expression -> . LPAREN expression RPAREN

    DOLLAR          shift and go to state 70
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    ID              shift and go to state 43
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46

    expression                     shift and go to state 69

state 39

    (29) command -> LEFT_BRACE NUMBER . DOT DOT NUMBER RIGHT_BRACE

    DOT             shift and go to state 71


state 40

    (40) condition -> LEFT_BRACKET expression . RIGHT_BRACKET
    (12) expression -> expression . NUMBER
    (13) expression -> expression . NUMBER expression
    (15) expression -> expression . DOLLAR ID
    (16) expression -> expression . DOLLAR ID expression

    RIGHT_BRACKET   shift and go to state 72
    NUMBER          shift and go to state 73
    DOLLAR          shift and go to state 74


state 41

    (6) expression -> NUMBER .
    (11) expression -> NUMBER . expression
    (6) expression -> . NUMBER
    (7) expression -> . STRING
    (8) expression -> . ID
    (9) expression -> . DOLLAR ID
    (10) expression -> . MINUS expression
    (11) expression -> . NUMBER expression
    (12) expression -> . expression NUMBER
    (13) expression -> . expression NUMBER expression
    (14) expression -> . DOLLAR ID expression
    (15) expression -> . expression DOLLAR ID
    (16) expression -> . expression DOLLAR ID expression
    (17) expression -> . LPAREN expression RPAREN

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    RIGHT_BRACKET   reduce using rule 6 (expression -> NUMBER .)
    CRIGHT_BRACKET  reduce using rule 6 (expression -> NUMBER .)
    WHILE           reduce using rule 6 (expression -> NUMBER .)
    IF              reduce using rule 6 (expression -> NUMBER .)
    FOR             reduce using rule 6 (expression -> NUMBER .)
    LEFT_BRACE      reduce using rule 6 (expression -> NUMBER .)
    LEFT_BRACKET    reduce using rule 6 (expression -> NUMBER .)
    CLEFT_BRACKET   reduce using rule 6 (expression -> NUMBER .)
    HASHTAG         reduce using rule 6 (expression -> NUMBER .)
    $end            reduce using rule 6 (expression -> NUMBER .)
    DONE            reduce using rule 6 (expression -> NUMBER .)
    ELSE            reduce using rule 6 (expression -> NUMBER .)
    ELIF            reduce using rule 6 (expression -> NUMBER .)
    FI              reduce using rule 6 (expression -> NUMBER .)
    RPAREN          reduce using rule 6 (expression -> NUMBER .)
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    ID              shift and go to state 43
    DOLLAR          shift and go to state 44
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46

  ! NUMBER          [ reduce using rule 6 (expression -> NUMBER .) ]
  ! DOLLAR          [ reduce using rule 6 (expression -> NUMBER .) ]
  ! ID              [ reduce using rule 6 (expression -> NUMBER .) ]
  ! LPAREN          [ reduce using rule 6 (expression -> NUMBER .) ]

    expression                     shift and go to state 75

state 42

    (7) expression -> STRING .

    RIGHT_BRACKET   reduce using rule 7 (expression -> STRING .)
    NUMBER          reduce using rule 7 (expression -> STRING .)
    DOLLAR          reduce using rule 7 (expression -> STRING .)
    CRIGHT_BRACKET  reduce using rule 7 (expression -> STRING .)
    WHILE           reduce using rule 7 (expression -> STRING .)
    IF              reduce using rule 7 (expression -> STRING .)
    FOR             reduce using rule 7 (expression -> STRING .)
    ID              reduce using rule 7 (expression -> STRING .)
    LEFT_BRACE      reduce using rule 7 (expression -> STRING .)
    LEFT_BRACKET    reduce using rule 7 (expression -> STRING .)
    CLEFT_BRACKET   reduce using rule 7 (expression -> STRING .)
    HASHTAG         reduce using rule 7 (expression -> STRING .)
    LPAREN          reduce using rule 7 (expression -> STRING .)
    $end            reduce using rule 7 (expression -> STRING .)
    DONE            reduce using rule 7 (expression -> STRING .)
    ELSE            reduce using rule 7 (expression -> STRING .)
    ELIF            reduce using rule 7 (expression -> STRING .)
    FI              reduce using rule 7 (expression -> STRING .)
    RPAREN          reduce using rule 7 (expression -> STRING .)


state 43

    (8) expression -> ID .

    RIGHT_BRACKET   reduce using rule 8 (expression -> ID .)
    NUMBER          reduce using rule 8 (expression -> ID .)
    DOLLAR          reduce using rule 8 (expression -> ID .)
    CRIGHT_BRACKET  reduce using rule 8 (expression -> ID .)
    WHILE           reduce using rule 8 (expression -> ID .)
    IF              reduce using rule 8 (expression -> ID .)
    FOR             reduce using rule 8 (expression -> ID .)
    ID              reduce using rule 8 (expression -> ID .)
    LEFT_BRACE      reduce using rule 8 (expression -> ID .)
    LEFT_BRACKET    reduce using rule 8 (expression -> ID .)
    CLEFT_BRACKET   reduce using rule 8 (expression -> ID .)
    HASHTAG         reduce using rule 8 (expression -> ID .)
    LPAREN          reduce using rule 8 (expression -> ID .)
    $end            reduce using rule 8 (expression -> ID .)
    DONE            reduce using rule 8 (expression -> ID .)
    ELSE            reduce using rule 8 (expression -> ID .)
    ELIF            reduce using rule 8 (expression -> ID .)
    FI              reduce using rule 8 (expression -> ID .)
    RPAREN          reduce using rule 8 (expression -> ID .)


state 44

    (9) expression -> DOLLAR . ID
    (14) expression -> DOLLAR . ID expression

    ID              shift and go to state 76


state 45

    (10) expression -> MINUS . expression
    (6) expression -> . NUMBER
    (7) expression -> . STRING
    (8) expression -> . ID
    (9) expression -> . DOLLAR ID
    (10) expression -> . MINUS expression
    (11) expression -> . NUMBER expression
    (12) expression -> . expression NUMBER
    (13) expression -> . expression NUMBER expression
    (14) expression -> . DOLLAR ID expression
    (15) expression -> . expression DOLLAR ID
    (16) expression -> . expression DOLLAR ID expression
    (17) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    ID              shift and go to state 43
    DOLLAR          shift and go to state 44
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46

    expression                     shift and go to state 77

state 46

    (17) expression -> LPAREN . expression RPAREN
    (6) expression -> . NUMBER
    (7) expression -> . STRING
    (8) expression -> . ID
    (9) expression -> . DOLLAR ID
    (10) expression -> . MINUS expression
    (11) expression -> . NUMBER expression
    (12) expression -> . expression NUMBER
    (13) expression -> . expression NUMBER expression
    (14) expression -> . DOLLAR ID expression
    (15) expression -> . expression DOLLAR ID
    (16) expression -> . expression DOLLAR ID expression
    (17) expression -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    ID              shift and go to state 43
    DOLLAR          shift and go to state 44
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46

    expression                     shift and go to state 78

state 47

    (41) condition -> CLEFT_BRACKET expression . CRIGHT_BRACKET
    (12) expression -> expression . NUMBER
    (13) expression -> expression . NUMBER expression
    (15) expression -> expression . DOLLAR ID
    (16) expression -> expression . DOLLAR ID expression

    CRIGHT_BRACKET  shift and go to state 79
    NUMBER          shift and go to state 73
    DOLLAR          shift and go to state 74


state 48

    (43) arithmetic_expression -> DOLLAR ID .

    PLUS            reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    MINUS           reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    TIMES           reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    DIVIDE          reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    WHILE           reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    IF              reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    FOR             reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    ID              reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    LEFT_BRACE      reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    LEFT_BRACKET    reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    CLEFT_BRACKET   reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    HASHTAG         reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    NUMBER          reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    DOLLAR          reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    LPAREN          reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    $end            reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    RPAREN          reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    DONE            reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    ELSE            reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    ELIF            reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)
    FI              reduce using rule 43 (arithmetic_expression -> DOLLAR ID .)


state 49

    (45) arithmetic_expression -> LPAREN arithmetic_expression . RPAREN
    (46) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (47) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (48) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (49) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (50) arithmetic_expression -> arithmetic_expression . PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> arithmetic_expression . MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> arithmetic_expression . TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> arithmetic_expression . DIVIDE EQUALS arithmetic_expression

    RPAREN          shift and go to state 80
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34


state 50

    (44) arithmetic_expression -> ID .

    RPAREN          reduce using rule 44 (arithmetic_expression -> ID .)
    PLUS            reduce using rule 44 (arithmetic_expression -> ID .)
    MINUS           reduce using rule 44 (arithmetic_expression -> ID .)
    TIMES           reduce using rule 44 (arithmetic_expression -> ID .)
    DIVIDE          reduce using rule 44 (arithmetic_expression -> ID .)
    WHILE           reduce using rule 44 (arithmetic_expression -> ID .)
    IF              reduce using rule 44 (arithmetic_expression -> ID .)
    FOR             reduce using rule 44 (arithmetic_expression -> ID .)
    ID              reduce using rule 44 (arithmetic_expression -> ID .)
    LEFT_BRACE      reduce using rule 44 (arithmetic_expression -> ID .)
    LEFT_BRACKET    reduce using rule 44 (arithmetic_expression -> ID .)
    CLEFT_BRACKET   reduce using rule 44 (arithmetic_expression -> ID .)
    HASHTAG         reduce using rule 44 (arithmetic_expression -> ID .)
    NUMBER          reduce using rule 44 (arithmetic_expression -> ID .)
    DOLLAR          reduce using rule 44 (arithmetic_expression -> ID .)
    LPAREN          reduce using rule 44 (arithmetic_expression -> ID .)
    $end            reduce using rule 44 (arithmetic_expression -> ID .)
    DONE            reduce using rule 44 (arithmetic_expression -> ID .)
    ELSE            reduce using rule 44 (arithmetic_expression -> ID .)
    ELIF            reduce using rule 44 (arithmetic_expression -> ID .)
    FI              reduce using rule 44 (arithmetic_expression -> ID .)


state 51

    (35) comment -> HASHTAG ID .

    WHILE           reduce using rule 35 (comment -> HASHTAG ID .)
    IF              reduce using rule 35 (comment -> HASHTAG ID .)
    FOR             reduce using rule 35 (comment -> HASHTAG ID .)
    ID              reduce using rule 35 (comment -> HASHTAG ID .)
    LEFT_BRACE      reduce using rule 35 (comment -> HASHTAG ID .)
    LEFT_BRACKET    reduce using rule 35 (comment -> HASHTAG ID .)
    CLEFT_BRACKET   reduce using rule 35 (comment -> HASHTAG ID .)
    HASHTAG         reduce using rule 35 (comment -> HASHTAG ID .)
    NUMBER          reduce using rule 35 (comment -> HASHTAG ID .)
    DOLLAR          reduce using rule 35 (comment -> HASHTAG ID .)
    LPAREN          reduce using rule 35 (comment -> HASHTAG ID .)
    $end            reduce using rule 35 (comment -> HASHTAG ID .)
    DONE            reduce using rule 35 (comment -> HASHTAG ID .)
    ELSE            reduce using rule 35 (comment -> HASHTAG ID .)
    ELIF            reduce using rule 35 (comment -> HASHTAG ID .)
    FI              reduce using rule 35 (comment -> HASHTAG ID .)


state 52

    (36) insertion -> command ID INSERTION . ID

    ID              shift and go to state 81


state 53

    (37) insertion -> command STRING INSERTION . ID

    ID              shift and go to state 82


state 54

    (34) command -> command MINUS MINUS . ID

    ID              shift and go to state 83


state 55

    (33) command -> command MINUS ID .

    ID              reduce using rule 33 (command -> command MINUS ID .)
    NUMBER          reduce using rule 33 (command -> command MINUS ID .)
    STRING          reduce using rule 33 (command -> command MINUS ID .)
    MINUS           reduce using rule 33 (command -> command MINUS ID .)
    PIPE            reduce using rule 33 (command -> command MINUS ID .)
    WHILE           reduce using rule 33 (command -> command MINUS ID .)
    IF              reduce using rule 33 (command -> command MINUS ID .)
    FOR             reduce using rule 33 (command -> command MINUS ID .)
    LEFT_BRACE      reduce using rule 33 (command -> command MINUS ID .)
    LEFT_BRACKET    reduce using rule 33 (command -> command MINUS ID .)
    CLEFT_BRACKET   reduce using rule 33 (command -> command MINUS ID .)
    HASHTAG         reduce using rule 33 (command -> command MINUS ID .)
    DOLLAR          reduce using rule 33 (command -> command MINUS ID .)
    LPAREN          reduce using rule 33 (command -> command MINUS ID .)
    $end            reduce using rule 33 (command -> command MINUS ID .)
    DONE            reduce using rule 33 (command -> command MINUS ID .)
    ELSE            reduce using rule 33 (command -> command MINUS ID .)
    ELIF            reduce using rule 33 (command -> command MINUS ID .)
    FI              reduce using rule 33 (command -> command MINUS ID .)
    DO              reduce using rule 33 (command -> command MINUS ID .)


state 56

    (38) pipe_command -> command PIPE command .
    (30) command -> command . ID
    (31) command -> command . NUMBER
    (32) command -> command . STRING
    (33) command -> command . MINUS ID
    (34) command -> command . MINUS MINUS ID

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    WHILE           reduce using rule 38 (pipe_command -> command PIPE command .)
    IF              reduce using rule 38 (pipe_command -> command PIPE command .)
    FOR             reduce using rule 38 (pipe_command -> command PIPE command .)
    LEFT_BRACE      reduce using rule 38 (pipe_command -> command PIPE command .)
    LEFT_BRACKET    reduce using rule 38 (pipe_command -> command PIPE command .)
    CLEFT_BRACKET   reduce using rule 38 (pipe_command -> command PIPE command .)
    HASHTAG         reduce using rule 38 (pipe_command -> command PIPE command .)
    DOLLAR          reduce using rule 38 (pipe_command -> command PIPE command .)
    LPAREN          reduce using rule 38 (pipe_command -> command PIPE command .)
    $end            reduce using rule 38 (pipe_command -> command PIPE command .)
    DONE            reduce using rule 38 (pipe_command -> command PIPE command .)
    ELSE            reduce using rule 38 (pipe_command -> command PIPE command .)
    ELIF            reduce using rule 38 (pipe_command -> command PIPE command .)
    FI              reduce using rule 38 (pipe_command -> command PIPE command .)
    ID              shift and go to state 84
    NUMBER          shift and go to state 27
    STRING          shift and go to state 85
    MINUS           shift and go to state 29

  ! ID              [ reduce using rule 38 (pipe_command -> command PIPE command .) ]
  ! NUMBER          [ reduce using rule 38 (pipe_command -> command PIPE command .) ]


state 57

    (28) command -> ID .

    ID              reduce using rule 28 (command -> ID .)
    NUMBER          reduce using rule 28 (command -> ID .)
    STRING          reduce using rule 28 (command -> ID .)
    MINUS           reduce using rule 28 (command -> ID .)
    WHILE           reduce using rule 28 (command -> ID .)
    IF              reduce using rule 28 (command -> ID .)
    FOR             reduce using rule 28 (command -> ID .)
    LEFT_BRACE      reduce using rule 28 (command -> ID .)
    LEFT_BRACKET    reduce using rule 28 (command -> ID .)
    CLEFT_BRACKET   reduce using rule 28 (command -> ID .)
    HASHTAG         reduce using rule 28 (command -> ID .)
    DOLLAR          reduce using rule 28 (command -> ID .)
    LPAREN          reduce using rule 28 (command -> ID .)
    $end            reduce using rule 28 (command -> ID .)
    DONE            reduce using rule 28 (command -> ID .)
    ELSE            reduce using rule 28 (command -> ID .)
    ELIF            reduce using rule 28 (command -> ID .)
    FI              reduce using rule 28 (command -> ID .)
    DO              reduce using rule 28 (command -> ID .)


state 58

    (46) arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .
    (46) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (47) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (48) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (49) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (50) arithmetic_expression -> arithmetic_expression . PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> arithmetic_expression . MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> arithmetic_expression . TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> arithmetic_expression . DIVIDE EQUALS arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    WHILE           reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    IF              reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    FOR             reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    ID              reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    LEFT_BRACE      reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    LEFT_BRACKET    reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    CLEFT_BRACKET   reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    HASHTAG         reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    NUMBER          reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    DOLLAR          reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    LPAREN          reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    $end            reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    RPAREN          reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    DONE            reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    ELSE            reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    ELIF            reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    FI              reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! TIMES           [ reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 46 (arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression .) ]


state 59

    (50) arithmetic_expression -> arithmetic_expression PLUS EQUALS . arithmetic_expression
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression

    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    ID              shift and go to state 50
    LPAREN          shift and go to state 23

    arithmetic_expression          shift and go to state 86

state 60

    (47) arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .
    (46) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (47) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (48) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (49) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (50) arithmetic_expression -> arithmetic_expression . PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> arithmetic_expression . MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> arithmetic_expression . TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> arithmetic_expression . DIVIDE EQUALS arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    WHILE           reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    IF              reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    FOR             reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    ID              reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    LEFT_BRACE      reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    LEFT_BRACKET    reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    CLEFT_BRACKET   reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    HASHTAG         reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    NUMBER          reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    DOLLAR          reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    LPAREN          reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    $end            reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    RPAREN          reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    DONE            reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    ELSE            reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    ELIF            reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    FI              reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! TIMES           [ reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 47 (arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression .) ]


state 61

    (51) arithmetic_expression -> arithmetic_expression MINUS EQUALS . arithmetic_expression
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression

    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    ID              shift and go to state 50
    LPAREN          shift and go to state 23

    arithmetic_expression          shift and go to state 87

state 62

    (48) arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .
    (46) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (47) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (48) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (49) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (50) arithmetic_expression -> arithmetic_expression . PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> arithmetic_expression . MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> arithmetic_expression . TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> arithmetic_expression . DIVIDE EQUALS arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    WHILE           reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    IF              reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    FOR             reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    ID              reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    LEFT_BRACE      reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    LEFT_BRACKET    reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    CLEFT_BRACKET   reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    HASHTAG         reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    NUMBER          reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    DOLLAR          reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    LPAREN          reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    $end            reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    RPAREN          reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    DONE            reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    ELSE            reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    ELIF            reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    FI              reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .) ]
  ! TIMES           [ reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 48 (arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression .) ]


state 63

    (52) arithmetic_expression -> arithmetic_expression TIMES EQUALS . arithmetic_expression
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression

    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    ID              shift and go to state 50
    LPAREN          shift and go to state 23

    arithmetic_expression          shift and go to state 88

state 64

    (49) arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .
    (46) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (47) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (48) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (49) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (50) arithmetic_expression -> arithmetic_expression . PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> arithmetic_expression . MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> arithmetic_expression . TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> arithmetic_expression . DIVIDE EQUALS arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    WHILE           reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    IF              reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    FOR             reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    ID              reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    LEFT_BRACE      reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    LEFT_BRACKET    reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    CLEFT_BRACKET   reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    HASHTAG         reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    NUMBER          reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    DOLLAR          reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    LPAREN          reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    $end            reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    RPAREN          reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    DONE            reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    ELSE            reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    ELIF            reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    FI              reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .) ]
  ! TIMES           [ reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 49 (arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression .) ]


state 65

    (53) arithmetic_expression -> arithmetic_expression DIVIDE EQUALS . arithmetic_expression
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression

    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    ID              shift and go to state 50
    LPAREN          shift and go to state 23

    arithmetic_expression          shift and go to state 89

state 66

    (39) while_statement -> WHILE condition SEMICOLON . DO statements DONE

    DO              shift and go to state 90


state 67

    (55) if_statement -> IF condition SEMICOLON . THEN statements ELSE statements FI
    (56) if_statement -> IF condition SEMICOLON . THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI

    THEN            shift and go to state 91


state 68

    (54) for_statement -> FOR ID IN . command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID

    ID              shift and go to state 57
    LEFT_BRACE      shift and go to state 18

    command                        shift and go to state 92

state 69

    (4) assignment -> ID EQUALS expression .
    (12) expression -> expression . NUMBER
    (13) expression -> expression . NUMBER expression
    (15) expression -> expression . DOLLAR ID
    (16) expression -> expression . DOLLAR ID expression

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
    WHILE           reduce using rule 4 (assignment -> ID EQUALS expression .)
    IF              reduce using rule 4 (assignment -> ID EQUALS expression .)
    FOR             reduce using rule 4 (assignment -> ID EQUALS expression .)
    ID              reduce using rule 4 (assignment -> ID EQUALS expression .)
    LEFT_BRACE      reduce using rule 4 (assignment -> ID EQUALS expression .)
    LEFT_BRACKET    reduce using rule 4 (assignment -> ID EQUALS expression .)
    CLEFT_BRACKET   reduce using rule 4 (assignment -> ID EQUALS expression .)
    HASHTAG         reduce using rule 4 (assignment -> ID EQUALS expression .)
    LPAREN          reduce using rule 4 (assignment -> ID EQUALS expression .)
    $end            reduce using rule 4 (assignment -> ID EQUALS expression .)
    DONE            reduce using rule 4 (assignment -> ID EQUALS expression .)
    ELSE            reduce using rule 4 (assignment -> ID EQUALS expression .)
    ELIF            reduce using rule 4 (assignment -> ID EQUALS expression .)
    FI              reduce using rule 4 (assignment -> ID EQUALS expression .)
    NUMBER          shift and go to state 73
    DOLLAR          shift and go to state 74

  ! NUMBER          [ reduce using rule 4 (assignment -> ID EQUALS expression .) ]
  ! DOLLAR          [ reduce using rule 4 (assignment -> ID EQUALS expression .) ]


state 70

    (5) assignment -> ID EQUALS DOLLAR . LPAREN arithmetic_expression RPAREN
    (9) expression -> DOLLAR . ID
    (14) expression -> DOLLAR . ID expression

    LPAREN          shift and go to state 93
    ID              shift and go to state 76


state 71

    (29) command -> LEFT_BRACE NUMBER DOT . DOT NUMBER RIGHT_BRACE

    DOT             shift and go to state 94


state 72

    (40) condition -> LEFT_BRACKET expression RIGHT_BRACKET .

    WHILE           reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    IF              reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    FOR             reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    ID              reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    LEFT_BRACE      reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    CLEFT_BRACKET   reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    HASHTAG         reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    NUMBER          reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    DOLLAR          reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    LPAREN          reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    $end            reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    SEMICOLON       reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    DONE            reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    ELSE            reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    ELIF            reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)
    FI              reduce using rule 40 (condition -> LEFT_BRACKET expression RIGHT_BRACKET .)


state 73

    (12) expression -> expression NUMBER .
    (13) expression -> expression NUMBER . expression
    (6) expression -> . NUMBER
    (7) expression -> . STRING
    (8) expression -> . ID
    (9) expression -> . DOLLAR ID
    (10) expression -> . MINUS expression
    (11) expression -> . NUMBER expression
    (12) expression -> . expression NUMBER
    (13) expression -> . expression NUMBER expression
    (14) expression -> . DOLLAR ID expression
    (15) expression -> . expression DOLLAR ID
    (16) expression -> . expression DOLLAR ID expression
    (17) expression -> . LPAREN expression RPAREN

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    RIGHT_BRACKET   reduce using rule 12 (expression -> expression NUMBER .)
    CRIGHT_BRACKET  reduce using rule 12 (expression -> expression NUMBER .)
    WHILE           reduce using rule 12 (expression -> expression NUMBER .)
    IF              reduce using rule 12 (expression -> expression NUMBER .)
    FOR             reduce using rule 12 (expression -> expression NUMBER .)
    LEFT_BRACE      reduce using rule 12 (expression -> expression NUMBER .)
    LEFT_BRACKET    reduce using rule 12 (expression -> expression NUMBER .)
    CLEFT_BRACKET   reduce using rule 12 (expression -> expression NUMBER .)
    HASHTAG         reduce using rule 12 (expression -> expression NUMBER .)
    $end            reduce using rule 12 (expression -> expression NUMBER .)
    DONE            reduce using rule 12 (expression -> expression NUMBER .)
    ELSE            reduce using rule 12 (expression -> expression NUMBER .)
    ELIF            reduce using rule 12 (expression -> expression NUMBER .)
    FI              reduce using rule 12 (expression -> expression NUMBER .)
    RPAREN          reduce using rule 12 (expression -> expression NUMBER .)
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    ID              shift and go to state 43
    DOLLAR          shift and go to state 44
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46

  ! NUMBER          [ reduce using rule 12 (expression -> expression NUMBER .) ]
  ! DOLLAR          [ reduce using rule 12 (expression -> expression NUMBER .) ]
  ! ID              [ reduce using rule 12 (expression -> expression NUMBER .) ]
  ! LPAREN          [ reduce using rule 12 (expression -> expression NUMBER .) ]

    expression                     shift and go to state 95

state 74

    (15) expression -> expression DOLLAR . ID
    (16) expression -> expression DOLLAR . ID expression

    ID              shift and go to state 96


state 75

    (11) expression -> NUMBER expression .
    (12) expression -> expression . NUMBER
    (13) expression -> expression . NUMBER expression
    (15) expression -> expression . DOLLAR ID
    (16) expression -> expression . DOLLAR ID expression

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
    RIGHT_BRACKET   reduce using rule 11 (expression -> NUMBER expression .)
    CRIGHT_BRACKET  reduce using rule 11 (expression -> NUMBER expression .)
    WHILE           reduce using rule 11 (expression -> NUMBER expression .)
    IF              reduce using rule 11 (expression -> NUMBER expression .)
    FOR             reduce using rule 11 (expression -> NUMBER expression .)
    ID              reduce using rule 11 (expression -> NUMBER expression .)
    LEFT_BRACE      reduce using rule 11 (expression -> NUMBER expression .)
    LEFT_BRACKET    reduce using rule 11 (expression -> NUMBER expression .)
    CLEFT_BRACKET   reduce using rule 11 (expression -> NUMBER expression .)
    HASHTAG         reduce using rule 11 (expression -> NUMBER expression .)
    LPAREN          reduce using rule 11 (expression -> NUMBER expression .)
    $end            reduce using rule 11 (expression -> NUMBER expression .)
    DONE            reduce using rule 11 (expression -> NUMBER expression .)
    ELSE            reduce using rule 11 (expression -> NUMBER expression .)
    ELIF            reduce using rule 11 (expression -> NUMBER expression .)
    FI              reduce using rule 11 (expression -> NUMBER expression .)
    RPAREN          reduce using rule 11 (expression -> NUMBER expression .)
    NUMBER          shift and go to state 73
    DOLLAR          shift and go to state 74

  ! NUMBER          [ reduce using rule 11 (expression -> NUMBER expression .) ]
  ! DOLLAR          [ reduce using rule 11 (expression -> NUMBER expression .) ]


state 76

    (9) expression -> DOLLAR ID .
    (14) expression -> DOLLAR ID . expression
    (6) expression -> . NUMBER
    (7) expression -> . STRING
    (8) expression -> . ID
    (9) expression -> . DOLLAR ID
    (10) expression -> . MINUS expression
    (11) expression -> . NUMBER expression
    (12) expression -> . expression NUMBER
    (13) expression -> . expression NUMBER expression
    (14) expression -> . DOLLAR ID expression
    (15) expression -> . expression DOLLAR ID
    (16) expression -> . expression DOLLAR ID expression
    (17) expression -> . LPAREN expression RPAREN

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    RIGHT_BRACKET   reduce using rule 9 (expression -> DOLLAR ID .)
    CRIGHT_BRACKET  reduce using rule 9 (expression -> DOLLAR ID .)
    WHILE           reduce using rule 9 (expression -> DOLLAR ID .)
    IF              reduce using rule 9 (expression -> DOLLAR ID .)
    FOR             reduce using rule 9 (expression -> DOLLAR ID .)
    LEFT_BRACE      reduce using rule 9 (expression -> DOLLAR ID .)
    LEFT_BRACKET    reduce using rule 9 (expression -> DOLLAR ID .)
    CLEFT_BRACKET   reduce using rule 9 (expression -> DOLLAR ID .)
    HASHTAG         reduce using rule 9 (expression -> DOLLAR ID .)
    $end            reduce using rule 9 (expression -> DOLLAR ID .)
    DONE            reduce using rule 9 (expression -> DOLLAR ID .)
    ELSE            reduce using rule 9 (expression -> DOLLAR ID .)
    ELIF            reduce using rule 9 (expression -> DOLLAR ID .)
    FI              reduce using rule 9 (expression -> DOLLAR ID .)
    RPAREN          reduce using rule 9 (expression -> DOLLAR ID .)
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    ID              shift and go to state 43
    DOLLAR          shift and go to state 44
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46

  ! NUMBER          [ reduce using rule 9 (expression -> DOLLAR ID .) ]
  ! DOLLAR          [ reduce using rule 9 (expression -> DOLLAR ID .) ]
  ! ID              [ reduce using rule 9 (expression -> DOLLAR ID .) ]
  ! LPAREN          [ reduce using rule 9 (expression -> DOLLAR ID .) ]

    expression                     shift and go to state 97

state 77

    (10) expression -> MINUS expression .
    (12) expression -> expression . NUMBER
    (13) expression -> expression . NUMBER expression
    (15) expression -> expression . DOLLAR ID
    (16) expression -> expression . DOLLAR ID expression

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
    RIGHT_BRACKET   reduce using rule 10 (expression -> MINUS expression .)
    CRIGHT_BRACKET  reduce using rule 10 (expression -> MINUS expression .)
    WHILE           reduce using rule 10 (expression -> MINUS expression .)
    IF              reduce using rule 10 (expression -> MINUS expression .)
    FOR             reduce using rule 10 (expression -> MINUS expression .)
    ID              reduce using rule 10 (expression -> MINUS expression .)
    LEFT_BRACE      reduce using rule 10 (expression -> MINUS expression .)
    LEFT_BRACKET    reduce using rule 10 (expression -> MINUS expression .)
    CLEFT_BRACKET   reduce using rule 10 (expression -> MINUS expression .)
    HASHTAG         reduce using rule 10 (expression -> MINUS expression .)
    LPAREN          reduce using rule 10 (expression -> MINUS expression .)
    $end            reduce using rule 10 (expression -> MINUS expression .)
    DONE            reduce using rule 10 (expression -> MINUS expression .)
    ELSE            reduce using rule 10 (expression -> MINUS expression .)
    ELIF            reduce using rule 10 (expression -> MINUS expression .)
    FI              reduce using rule 10 (expression -> MINUS expression .)
    RPAREN          reduce using rule 10 (expression -> MINUS expression .)
    NUMBER          shift and go to state 73
    DOLLAR          shift and go to state 74

  ! NUMBER          [ reduce using rule 10 (expression -> MINUS expression .) ]
  ! DOLLAR          [ reduce using rule 10 (expression -> MINUS expression .) ]


state 78

    (17) expression -> LPAREN expression . RPAREN
    (12) expression -> expression . NUMBER
    (13) expression -> expression . NUMBER expression
    (15) expression -> expression . DOLLAR ID
    (16) expression -> expression . DOLLAR ID expression

    RPAREN          shift and go to state 98
    NUMBER          shift and go to state 73
    DOLLAR          shift and go to state 74


state 79

    (41) condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .

    WHILE           reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    IF              reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    FOR             reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    ID              reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    LEFT_BRACE      reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    LEFT_BRACKET    reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    CLEFT_BRACKET   reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    HASHTAG         reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    NUMBER          reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    DOLLAR          reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    LPAREN          reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    $end            reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    SEMICOLON       reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    DONE            reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    ELSE            reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    ELIF            reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)
    FI              reduce using rule 41 (condition -> CLEFT_BRACKET expression CRIGHT_BRACKET .)


state 80

    (45) arithmetic_expression -> LPAREN arithmetic_expression RPAREN .

    PLUS            reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    MINUS           reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    TIMES           reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    DIVIDE          reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    WHILE           reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    IF              reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    FOR             reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    ID              reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    LEFT_BRACE      reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    LEFT_BRACKET    reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    CLEFT_BRACKET   reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    HASHTAG         reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    NUMBER          reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    DOLLAR          reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    LPAREN          reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    $end            reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    RPAREN          reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    DONE            reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    ELSE            reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    ELIF            reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)
    FI              reduce using rule 45 (arithmetic_expression -> LPAREN arithmetic_expression RPAREN .)


state 81

    (36) insertion -> command ID INSERTION ID .

    WHILE           reduce using rule 36 (insertion -> command ID INSERTION ID .)
    IF              reduce using rule 36 (insertion -> command ID INSERTION ID .)
    FOR             reduce using rule 36 (insertion -> command ID INSERTION ID .)
    ID              reduce using rule 36 (insertion -> command ID INSERTION ID .)
    LEFT_BRACE      reduce using rule 36 (insertion -> command ID INSERTION ID .)
    LEFT_BRACKET    reduce using rule 36 (insertion -> command ID INSERTION ID .)
    CLEFT_BRACKET   reduce using rule 36 (insertion -> command ID INSERTION ID .)
    HASHTAG         reduce using rule 36 (insertion -> command ID INSERTION ID .)
    NUMBER          reduce using rule 36 (insertion -> command ID INSERTION ID .)
    DOLLAR          reduce using rule 36 (insertion -> command ID INSERTION ID .)
    LPAREN          reduce using rule 36 (insertion -> command ID INSERTION ID .)
    $end            reduce using rule 36 (insertion -> command ID INSERTION ID .)
    DONE            reduce using rule 36 (insertion -> command ID INSERTION ID .)
    ELSE            reduce using rule 36 (insertion -> command ID INSERTION ID .)
    ELIF            reduce using rule 36 (insertion -> command ID INSERTION ID .)
    FI              reduce using rule 36 (insertion -> command ID INSERTION ID .)


state 82

    (37) insertion -> command STRING INSERTION ID .

    WHILE           reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    IF              reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    FOR             reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    ID              reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    LEFT_BRACE      reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    LEFT_BRACKET    reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    CLEFT_BRACKET   reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    HASHTAG         reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    NUMBER          reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    DOLLAR          reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    LPAREN          reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    $end            reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    DONE            reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    ELSE            reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    ELIF            reduce using rule 37 (insertion -> command STRING INSERTION ID .)
    FI              reduce using rule 37 (insertion -> command STRING INSERTION ID .)


state 83

    (34) command -> command MINUS MINUS ID .

    ID              reduce using rule 34 (command -> command MINUS MINUS ID .)
    NUMBER          reduce using rule 34 (command -> command MINUS MINUS ID .)
    STRING          reduce using rule 34 (command -> command MINUS MINUS ID .)
    MINUS           reduce using rule 34 (command -> command MINUS MINUS ID .)
    PIPE            reduce using rule 34 (command -> command MINUS MINUS ID .)
    WHILE           reduce using rule 34 (command -> command MINUS MINUS ID .)
    IF              reduce using rule 34 (command -> command MINUS MINUS ID .)
    FOR             reduce using rule 34 (command -> command MINUS MINUS ID .)
    LEFT_BRACE      reduce using rule 34 (command -> command MINUS MINUS ID .)
    LEFT_BRACKET    reduce using rule 34 (command -> command MINUS MINUS ID .)
    CLEFT_BRACKET   reduce using rule 34 (command -> command MINUS MINUS ID .)
    HASHTAG         reduce using rule 34 (command -> command MINUS MINUS ID .)
    DOLLAR          reduce using rule 34 (command -> command MINUS MINUS ID .)
    LPAREN          reduce using rule 34 (command -> command MINUS MINUS ID .)
    $end            reduce using rule 34 (command -> command MINUS MINUS ID .)
    DONE            reduce using rule 34 (command -> command MINUS MINUS ID .)
    ELSE            reduce using rule 34 (command -> command MINUS MINUS ID .)
    ELIF            reduce using rule 34 (command -> command MINUS MINUS ID .)
    FI              reduce using rule 34 (command -> command MINUS MINUS ID .)
    DO              reduce using rule 34 (command -> command MINUS MINUS ID .)


state 84

    (30) command -> command ID .

    ID              reduce using rule 30 (command -> command ID .)
    NUMBER          reduce using rule 30 (command -> command ID .)
    STRING          reduce using rule 30 (command -> command ID .)
    MINUS           reduce using rule 30 (command -> command ID .)
    WHILE           reduce using rule 30 (command -> command ID .)
    IF              reduce using rule 30 (command -> command ID .)
    FOR             reduce using rule 30 (command -> command ID .)
    LEFT_BRACE      reduce using rule 30 (command -> command ID .)
    LEFT_BRACKET    reduce using rule 30 (command -> command ID .)
    CLEFT_BRACKET   reduce using rule 30 (command -> command ID .)
    HASHTAG         reduce using rule 30 (command -> command ID .)
    DOLLAR          reduce using rule 30 (command -> command ID .)
    LPAREN          reduce using rule 30 (command -> command ID .)
    $end            reduce using rule 30 (command -> command ID .)
    DONE            reduce using rule 30 (command -> command ID .)
    ELSE            reduce using rule 30 (command -> command ID .)
    ELIF            reduce using rule 30 (command -> command ID .)
    FI              reduce using rule 30 (command -> command ID .)
    DO              reduce using rule 30 (command -> command ID .)


state 85

    (32) command -> command STRING .

    ID              reduce using rule 32 (command -> command STRING .)
    NUMBER          reduce using rule 32 (command -> command STRING .)
    STRING          reduce using rule 32 (command -> command STRING .)
    MINUS           reduce using rule 32 (command -> command STRING .)
    WHILE           reduce using rule 32 (command -> command STRING .)
    IF              reduce using rule 32 (command -> command STRING .)
    FOR             reduce using rule 32 (command -> command STRING .)
    LEFT_BRACE      reduce using rule 32 (command -> command STRING .)
    LEFT_BRACKET    reduce using rule 32 (command -> command STRING .)
    CLEFT_BRACKET   reduce using rule 32 (command -> command STRING .)
    HASHTAG         reduce using rule 32 (command -> command STRING .)
    DOLLAR          reduce using rule 32 (command -> command STRING .)
    LPAREN          reduce using rule 32 (command -> command STRING .)
    $end            reduce using rule 32 (command -> command STRING .)
    DONE            reduce using rule 32 (command -> command STRING .)
    ELSE            reduce using rule 32 (command -> command STRING .)
    ELIF            reduce using rule 32 (command -> command STRING .)
    FI              reduce using rule 32 (command -> command STRING .)
    DO              reduce using rule 32 (command -> command STRING .)


state 86

    (50) arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .
    (46) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (47) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (48) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (49) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (50) arithmetic_expression -> arithmetic_expression . PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> arithmetic_expression . MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> arithmetic_expression . TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> arithmetic_expression . DIVIDE EQUALS arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    WHILE           reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    IF              reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    FOR             reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    ID              reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    LEFT_BRACE      reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    LEFT_BRACKET    reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    CLEFT_BRACKET   reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    HASHTAG         reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    NUMBER          reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    DOLLAR          reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    LPAREN          reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    $end            reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    RPAREN          reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    DONE            reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    ELSE            reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    ELIF            reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    FI              reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .) ]
  ! TIMES           [ reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 50 (arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression .) ]


state 87

    (51) arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .
    (46) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (47) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (48) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (49) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (50) arithmetic_expression -> arithmetic_expression . PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> arithmetic_expression . MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> arithmetic_expression . TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> arithmetic_expression . DIVIDE EQUALS arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    WHILE           reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    IF              reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    FOR             reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    ID              reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    LEFT_BRACE      reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    LEFT_BRACKET    reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    CLEFT_BRACKET   reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    HASHTAG         reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    NUMBER          reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    DOLLAR          reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    LPAREN          reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    $end            reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    RPAREN          reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    DONE            reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    ELSE            reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    ELIF            reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    FI              reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .) ]
  ! TIMES           [ reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 51 (arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression .) ]


state 88

    (52) arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .
    (46) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (47) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (48) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (49) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (50) arithmetic_expression -> arithmetic_expression . PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> arithmetic_expression . MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> arithmetic_expression . TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> arithmetic_expression . DIVIDE EQUALS arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    WHILE           reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    IF              reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    FOR             reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    ID              reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    LEFT_BRACE      reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    LEFT_BRACKET    reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    CLEFT_BRACKET   reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    HASHTAG         reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    NUMBER          reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    DOLLAR          reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    LPAREN          reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    $end            reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    RPAREN          reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    DONE            reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    ELSE            reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    ELIF            reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    FI              reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .) ]
  ! TIMES           [ reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 52 (arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression .) ]


state 89

    (53) arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .
    (46) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (47) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (48) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (49) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (50) arithmetic_expression -> arithmetic_expression . PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> arithmetic_expression . MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> arithmetic_expression . TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> arithmetic_expression . DIVIDE EQUALS arithmetic_expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    WHILE           reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    IF              reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    FOR             reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    ID              reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    LEFT_BRACE      reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    LEFT_BRACKET    reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    CLEFT_BRACKET   reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    HASHTAG         reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    NUMBER          reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    DOLLAR          reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    LPAREN          reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    $end            reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    RPAREN          reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    DONE            reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    ELSE            reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    ELIF            reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    FI              reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34

  ! PLUS            [ reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .) ]
  ! MINUS           [ reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .) ]
  ! TIMES           [ reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .) ]
  ! DIVIDE          [ reduce using rule 53 (arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression .) ]


state 90

    (39) while_statement -> WHILE condition SEMICOLON DO . statements DONE
    (2) statements -> . statement
    (3) statements -> . statements statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    condition                      shift and go to state 8
    statements                     shift and go to state 99
    statement                      shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    command                        shift and go to state 7
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 91

    (55) if_statement -> IF condition SEMICOLON THEN . statements ELSE statements FI
    (56) if_statement -> IF condition SEMICOLON THEN . statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (2) statements -> . statement
    (3) statements -> . statements statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    condition                      shift and go to state 8
    statements                     shift and go to state 100
    statement                      shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    command                        shift and go to state 7
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 92

    (54) for_statement -> FOR ID IN command . DO statements DONE
    (30) command -> command . ID
    (31) command -> command . NUMBER
    (32) command -> command . STRING
    (33) command -> command . MINUS ID
    (34) command -> command . MINUS MINUS ID

    DO              shift and go to state 101
    ID              shift and go to state 84
    NUMBER          shift and go to state 27
    STRING          shift and go to state 85
    MINUS           shift and go to state 29


state 93

    (5) assignment -> ID EQUALS DOLLAR LPAREN . arithmetic_expression RPAREN
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression

    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    ID              shift and go to state 50
    LPAREN          shift and go to state 23

    arithmetic_expression          shift and go to state 102

state 94

    (29) command -> LEFT_BRACE NUMBER DOT DOT . NUMBER RIGHT_BRACE

    NUMBER          shift and go to state 103


state 95

    (13) expression -> expression NUMBER expression .
    (12) expression -> expression . NUMBER
    (13) expression -> expression . NUMBER expression
    (15) expression -> expression . DOLLAR ID
    (16) expression -> expression . DOLLAR ID expression

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
    RIGHT_BRACKET   reduce using rule 13 (expression -> expression NUMBER expression .)
    CRIGHT_BRACKET  reduce using rule 13 (expression -> expression NUMBER expression .)
    WHILE           reduce using rule 13 (expression -> expression NUMBER expression .)
    IF              reduce using rule 13 (expression -> expression NUMBER expression .)
    FOR             reduce using rule 13 (expression -> expression NUMBER expression .)
    ID              reduce using rule 13 (expression -> expression NUMBER expression .)
    LEFT_BRACE      reduce using rule 13 (expression -> expression NUMBER expression .)
    LEFT_BRACKET    reduce using rule 13 (expression -> expression NUMBER expression .)
    CLEFT_BRACKET   reduce using rule 13 (expression -> expression NUMBER expression .)
    HASHTAG         reduce using rule 13 (expression -> expression NUMBER expression .)
    LPAREN          reduce using rule 13 (expression -> expression NUMBER expression .)
    $end            reduce using rule 13 (expression -> expression NUMBER expression .)
    DONE            reduce using rule 13 (expression -> expression NUMBER expression .)
    ELSE            reduce using rule 13 (expression -> expression NUMBER expression .)
    ELIF            reduce using rule 13 (expression -> expression NUMBER expression .)
    FI              reduce using rule 13 (expression -> expression NUMBER expression .)
    RPAREN          reduce using rule 13 (expression -> expression NUMBER expression .)
    NUMBER          shift and go to state 73
    DOLLAR          shift and go to state 74

  ! NUMBER          [ reduce using rule 13 (expression -> expression NUMBER expression .) ]
  ! DOLLAR          [ reduce using rule 13 (expression -> expression NUMBER expression .) ]


state 96

    (15) expression -> expression DOLLAR ID .
    (16) expression -> expression DOLLAR ID . expression
    (6) expression -> . NUMBER
    (7) expression -> . STRING
    (8) expression -> . ID
    (9) expression -> . DOLLAR ID
    (10) expression -> . MINUS expression
    (11) expression -> . NUMBER expression
    (12) expression -> . expression NUMBER
    (13) expression -> . expression NUMBER expression
    (14) expression -> . DOLLAR ID expression
    (15) expression -> . expression DOLLAR ID
    (16) expression -> . expression DOLLAR ID expression
    (17) expression -> . LPAREN expression RPAREN

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    RIGHT_BRACKET   reduce using rule 15 (expression -> expression DOLLAR ID .)
    CRIGHT_BRACKET  reduce using rule 15 (expression -> expression DOLLAR ID .)
    WHILE           reduce using rule 15 (expression -> expression DOLLAR ID .)
    IF              reduce using rule 15 (expression -> expression DOLLAR ID .)
    FOR             reduce using rule 15 (expression -> expression DOLLAR ID .)
    LEFT_BRACE      reduce using rule 15 (expression -> expression DOLLAR ID .)
    LEFT_BRACKET    reduce using rule 15 (expression -> expression DOLLAR ID .)
    CLEFT_BRACKET   reduce using rule 15 (expression -> expression DOLLAR ID .)
    HASHTAG         reduce using rule 15 (expression -> expression DOLLAR ID .)
    $end            reduce using rule 15 (expression -> expression DOLLAR ID .)
    DONE            reduce using rule 15 (expression -> expression DOLLAR ID .)
    ELSE            reduce using rule 15 (expression -> expression DOLLAR ID .)
    ELIF            reduce using rule 15 (expression -> expression DOLLAR ID .)
    FI              reduce using rule 15 (expression -> expression DOLLAR ID .)
    RPAREN          reduce using rule 15 (expression -> expression DOLLAR ID .)
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    ID              shift and go to state 43
    DOLLAR          shift and go to state 44
    MINUS           shift and go to state 45
    LPAREN          shift and go to state 46

  ! NUMBER          [ reduce using rule 15 (expression -> expression DOLLAR ID .) ]
  ! DOLLAR          [ reduce using rule 15 (expression -> expression DOLLAR ID .) ]
  ! ID              [ reduce using rule 15 (expression -> expression DOLLAR ID .) ]
  ! LPAREN          [ reduce using rule 15 (expression -> expression DOLLAR ID .) ]

    expression                     shift and go to state 104

state 97

    (14) expression -> DOLLAR ID expression .
    (12) expression -> expression . NUMBER
    (13) expression -> expression . NUMBER expression
    (15) expression -> expression . DOLLAR ID
    (16) expression -> expression . DOLLAR ID expression

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
    RIGHT_BRACKET   reduce using rule 14 (expression -> DOLLAR ID expression .)
    CRIGHT_BRACKET  reduce using rule 14 (expression -> DOLLAR ID expression .)
    WHILE           reduce using rule 14 (expression -> DOLLAR ID expression .)
    IF              reduce using rule 14 (expression -> DOLLAR ID expression .)
    FOR             reduce using rule 14 (expression -> DOLLAR ID expression .)
    ID              reduce using rule 14 (expression -> DOLLAR ID expression .)
    LEFT_BRACE      reduce using rule 14 (expression -> DOLLAR ID expression .)
    LEFT_BRACKET    reduce using rule 14 (expression -> DOLLAR ID expression .)
    CLEFT_BRACKET   reduce using rule 14 (expression -> DOLLAR ID expression .)
    HASHTAG         reduce using rule 14 (expression -> DOLLAR ID expression .)
    LPAREN          reduce using rule 14 (expression -> DOLLAR ID expression .)
    $end            reduce using rule 14 (expression -> DOLLAR ID expression .)
    DONE            reduce using rule 14 (expression -> DOLLAR ID expression .)
    ELSE            reduce using rule 14 (expression -> DOLLAR ID expression .)
    ELIF            reduce using rule 14 (expression -> DOLLAR ID expression .)
    FI              reduce using rule 14 (expression -> DOLLAR ID expression .)
    RPAREN          reduce using rule 14 (expression -> DOLLAR ID expression .)
    NUMBER          shift and go to state 73
    DOLLAR          shift and go to state 74

  ! NUMBER          [ reduce using rule 14 (expression -> DOLLAR ID expression .) ]
  ! DOLLAR          [ reduce using rule 14 (expression -> DOLLAR ID expression .) ]


state 98

    (17) expression -> LPAREN expression RPAREN .

    RIGHT_BRACKET   reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    DOLLAR          reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    CRIGHT_BRACKET  reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    LEFT_BRACE      reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    LEFT_BRACKET    reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    CLEFT_BRACKET   reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    HASHTAG         reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    DONE            reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    ELIF            reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    FI              reduce using rule 17 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 17 (expression -> LPAREN expression RPAREN .)


state 99

    (39) while_statement -> WHILE condition SEMICOLON DO statements . DONE
    (3) statements -> statements . statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    DONE            shift and go to state 105
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    condition                      shift and go to state 8
    statement                      shift and go to state 25
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    command                        shift and go to state 7
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 100

    (55) if_statement -> IF condition SEMICOLON THEN statements . ELSE statements FI
    (56) if_statement -> IF condition SEMICOLON THEN statements . ELIF condition SEMICOLON THEN statements ELSE statements FI
    (3) statements -> statements . statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    ELSE            shift and go to state 106
    ELIF            shift and go to state 107
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    condition                      shift and go to state 8
    statement                      shift and go to state 25
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    command                        shift and go to state 7
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 101

    (54) for_statement -> FOR ID IN command DO . statements DONE
    (2) statements -> . statement
    (3) statements -> . statements statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    command                        shift and go to state 7
    statements                     shift and go to state 108
    statement                      shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    condition                      shift and go to state 8
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 102

    (5) assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression . RPAREN
    (46) arithmetic_expression -> arithmetic_expression . PLUS arithmetic_expression
    (47) arithmetic_expression -> arithmetic_expression . MINUS arithmetic_expression
    (48) arithmetic_expression -> arithmetic_expression . TIMES arithmetic_expression
    (49) arithmetic_expression -> arithmetic_expression . DIVIDE arithmetic_expression
    (50) arithmetic_expression -> arithmetic_expression . PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> arithmetic_expression . MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> arithmetic_expression . TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> arithmetic_expression . DIVIDE EQUALS arithmetic_expression

    RPAREN          shift and go to state 109
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    TIMES           shift and go to state 33
    DIVIDE          shift and go to state 34


state 103

    (29) command -> LEFT_BRACE NUMBER DOT DOT NUMBER . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 110


state 104

    (16) expression -> expression DOLLAR ID expression .
    (12) expression -> expression . NUMBER
    (13) expression -> expression . NUMBER expression
    (15) expression -> expression . DOLLAR ID
    (16) expression -> expression . DOLLAR ID expression

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for DOLLAR resolved as shift
    RIGHT_BRACKET   reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    CRIGHT_BRACKET  reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    WHILE           reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    IF              reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    FOR             reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    ID              reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    LEFT_BRACE      reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    LEFT_BRACKET    reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    CLEFT_BRACKET   reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    HASHTAG         reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    LPAREN          reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    $end            reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    DONE            reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    ELSE            reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    ELIF            reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    FI              reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    RPAREN          reduce using rule 16 (expression -> expression DOLLAR ID expression .)
    NUMBER          shift and go to state 73
    DOLLAR          shift and go to state 74

  ! NUMBER          [ reduce using rule 16 (expression -> expression DOLLAR ID expression .) ]
  ! DOLLAR          [ reduce using rule 16 (expression -> expression DOLLAR ID expression .) ]


state 105

    (39) while_statement -> WHILE condition SEMICOLON DO statements DONE .

    WHILE           reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    IF              reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    FOR             reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    ID              reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    LEFT_BRACE      reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    LEFT_BRACKET    reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    CLEFT_BRACKET   reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    HASHTAG         reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    NUMBER          reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    DOLLAR          reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    LPAREN          reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    $end            reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    DONE            reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    ELSE            reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    ELIF            reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)
    FI              reduce using rule 39 (while_statement -> WHILE condition SEMICOLON DO statements DONE .)


state 106

    (55) if_statement -> IF condition SEMICOLON THEN statements ELSE . statements FI
    (2) statements -> . statement
    (3) statements -> . statements statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    condition                      shift and go to state 8
    statements                     shift and go to state 111
    statement                      shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    command                        shift and go to state 7
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 107

    (56) if_statement -> IF condition SEMICOLON THEN statements ELIF . condition SEMICOLON THEN statements ELSE statements FI
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET

    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21

    condition                      shift and go to state 112

state 108

    (54) for_statement -> FOR ID IN command DO statements . DONE
    (3) statements -> statements . statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    DONE            shift and go to state 113
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    command                        shift and go to state 7
    statement                      shift and go to state 25
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    condition                      shift and go to state 8
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 109

    (5) assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .

    WHILE           reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    IF              reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    FOR             reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    ID              reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    LEFT_BRACE      reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    LEFT_BRACKET    reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    CLEFT_BRACKET   reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    HASHTAG         reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    NUMBER          reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    DOLLAR          reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    LPAREN          reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    $end            reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    DONE            reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    ELSE            reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    ELIF            reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)
    FI              reduce using rule 5 (assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN .)


state 110

    (29) command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .

    ID              reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    NUMBER          reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    STRING          reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    MINUS           reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    PIPE            reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    WHILE           reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    IF              reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    FOR             reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    LEFT_BRACE      reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    LEFT_BRACKET    reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    CLEFT_BRACKET   reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    HASHTAG         reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    DOLLAR          reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    LPAREN          reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    $end            reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    DONE            reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    ELSE            reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    ELIF            reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    FI              reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)
    DO              reduce using rule 29 (command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE .)


state 111

    (55) if_statement -> IF condition SEMICOLON THEN statements ELSE statements . FI
    (3) statements -> statements . statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    FI              shift and go to state 114
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    condition                      shift and go to state 8
    statement                      shift and go to state 25
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    command                        shift and go to state 7
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 112

    (56) if_statement -> IF condition SEMICOLON THEN statements ELIF condition . SEMICOLON THEN statements ELSE statements FI

    SEMICOLON       shift and go to state 115


state 113

    (54) for_statement -> FOR ID IN command DO statements DONE .

    WHILE           reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    IF              reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    FOR             reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    ID              reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    LEFT_BRACE      reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    LEFT_BRACKET    reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    CLEFT_BRACKET   reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    HASHTAG         reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    NUMBER          reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    DOLLAR          reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    LPAREN          reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    $end            reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    DONE            reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    ELSE            reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    ELIF            reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)
    FI              reduce using rule 54 (for_statement -> FOR ID IN command DO statements DONE .)


state 114

    (55) if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .

    WHILE           reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    IF              reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    FOR             reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    ID              reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    LEFT_BRACE      reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    LEFT_BRACKET    reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    CLEFT_BRACKET   reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    HASHTAG         reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    NUMBER          reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    DOLLAR          reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    LPAREN          reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    $end            reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    DONE            reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    ELSE            reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    ELIF            reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)
    FI              reduce using rule 55 (if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI .)


state 115

    (56) if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON . THEN statements ELSE statements FI

    THEN            shift and go to state 116


state 116

    (56) if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN . statements ELSE statements FI
    (2) statements -> . statement
    (3) statements -> . statements statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    condition                      shift and go to state 8
    statements                     shift and go to state 117
    statement                      shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    command                        shift and go to state 7
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 117

    (56) if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements . ELSE statements FI
    (3) statements -> statements . statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    ELSE            shift and go to state 118
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    condition                      shift and go to state 8
    statement                      shift and go to state 25
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    command                        shift and go to state 7
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 118

    (56) if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE . statements FI
    (2) statements -> . statement
    (3) statements -> . statements statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    condition                      shift and go to state 8
    statements                     shift and go to state 119
    statement                      shift and go to state 3
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    command                        shift and go to state 7
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 119

    (56) if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements . FI
    (3) statements -> statements . statement
    (18) statement -> . while_statement
    (19) statement -> . if_statement
    (20) statement -> . for_statement
    (21) statement -> . command
    (22) statement -> . condition
    (23) statement -> . assignment
    (24) statement -> . comment
    (25) statement -> . arithmetic_expression
    (26) statement -> . insertion
    (27) statement -> . pipe_command
    (39) while_statement -> . WHILE condition SEMICOLON DO statements DONE
    (55) if_statement -> . IF condition SEMICOLON THEN statements ELSE statements FI
    (56) if_statement -> . IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI
    (54) for_statement -> . FOR ID IN command DO statements DONE
    (28) command -> . ID
    (29) command -> . LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE
    (30) command -> . command ID
    (31) command -> . command NUMBER
    (32) command -> . command STRING
    (33) command -> . command MINUS ID
    (34) command -> . command MINUS MINUS ID
    (40) condition -> . LEFT_BRACKET expression RIGHT_BRACKET
    (41) condition -> . CLEFT_BRACKET expression CRIGHT_BRACKET
    (4) assignment -> . ID EQUALS expression
    (5) assignment -> . ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN
    (35) comment -> . HASHTAG ID
    (42) arithmetic_expression -> . NUMBER
    (43) arithmetic_expression -> . DOLLAR ID
    (44) arithmetic_expression -> . ID
    (45) arithmetic_expression -> . LPAREN arithmetic_expression RPAREN
    (46) arithmetic_expression -> . arithmetic_expression PLUS arithmetic_expression
    (47) arithmetic_expression -> . arithmetic_expression MINUS arithmetic_expression
    (48) arithmetic_expression -> . arithmetic_expression TIMES arithmetic_expression
    (49) arithmetic_expression -> . arithmetic_expression DIVIDE arithmetic_expression
    (50) arithmetic_expression -> . arithmetic_expression PLUS EQUALS arithmetic_expression
    (51) arithmetic_expression -> . arithmetic_expression MINUS EQUALS arithmetic_expression
    (52) arithmetic_expression -> . arithmetic_expression TIMES EQUALS arithmetic_expression
    (53) arithmetic_expression -> . arithmetic_expression DIVIDE EQUALS arithmetic_expression
    (36) insertion -> . command ID INSERTION ID
    (37) insertion -> . command STRING INSERTION ID
    (38) pipe_command -> . command PIPE command

    FI              shift and go to state 120
    WHILE           shift and go to state 14
    IF              shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    LEFT_BRACE      shift and go to state 18
    LEFT_BRACKET    shift and go to state 20
    CLEFT_BRACKET   shift and go to state 21
    HASHTAG         shift and go to state 24
    NUMBER          shift and go to state 19
    DOLLAR          shift and go to state 22
    LPAREN          shift and go to state 23

    condition                      shift and go to state 8
    statement                      shift and go to state 25
    while_statement                shift and go to state 4
    if_statement                   shift and go to state 5
    for_statement                  shift and go to state 6
    command                        shift and go to state 7
    assignment                     shift and go to state 9
    comment                        shift and go to state 10
    arithmetic_expression          shift and go to state 11
    insertion                      shift and go to state 12
    pipe_command                   shift and go to state 13

state 120

    (56) if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .

    WHILE           reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    IF              reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    FOR             reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    ID              reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    LEFT_BRACE      reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    LEFT_BRACKET    reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    CLEFT_BRACKET   reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    HASHTAG         reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    NUMBER          reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    DOLLAR          reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    LPAREN          reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    $end            reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    DONE            reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    ELSE            reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    ELIF            reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)
    FI              reduce using rule 56 (if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 7 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 7 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 41 resolved as shift
WARNING: shift/reduce conflict for ID in state 41 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 41 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 41 resolved as shift
WARNING: shift/reduce conflict for ID in state 56 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 58 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 58 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 58 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 58 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 64 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 69 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 69 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 73 resolved as shift
WARNING: shift/reduce conflict for ID in state 73 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 73 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 73 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 75 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 75 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 76 resolved as shift
WARNING: shift/reduce conflict for ID in state 76 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 76 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 76 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 77 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 86 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 86 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 86 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 87 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 87 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 88 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 89 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 89 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 95 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 95 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 96 resolved as shift
WARNING: shift/reduce conflict for ID in state 96 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 96 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 96 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 97 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 97 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 104 resolved as shift
WARNING: shift/reduce conflict for DOLLAR in state 104 resolved as shift
WARNING: reduce/reduce conflict in state 17 resolved using rule (command -> ID)
WARNING: rejected rule (arithmetic_expression -> ID) in state 17
