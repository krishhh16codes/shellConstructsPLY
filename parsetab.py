
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND CASE CLEFT_BRACKET COPROC CRIGHT_BRACKET DIVIDE DO DOLLAR DONE DOT ELIF ELSE EQUALS EQUALTO ESAC EXCLAMATION_MARK FI FOR FUNCTION GREATERTHAN HASHTAG ID IF IN INSERTION LEFT_BRACE LEFT_BRACKET LESSTHAN LPAREN MINUS NUMBER PIPE PLUS RIGHT_BRACE RIGHT_BRACKET RPAREN SELECT SEMICOLON SPACE STRING THEN TIME TIMES UNTIL WHILEprogram : statementsstatements : statement\n                  | statements statementassignment : ID EQUALS expression\n                  | ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN\n\texpression : NUMBER\n\t           | STRING\n             | ID\n\t           | DOLLAR ID\n             | MINUS expression\n             | NUMBER expression\n\t\t         | expression NUMBER\n             | expression NUMBER expression\n\t           | DOLLAR ID expression\n\t           | expression DOLLAR ID \n\t           | expression DOLLAR ID expression\n             | LPAREN expression RPAREN\n  statement : while_statement\n                 | if_statement\n                 | for_statement\n                 | command\n\t\t\t\t\t\t\t\t | condition\n                 | assignment\n                 | comment\n\t               | arithmetic_expression\n                 | insertion\n                 | pipe_commandcommand : ID\n\t             \n               | LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE\n               | command ID\n               | command NUMBER\n               | command STRING\n               | command MINUS ID\n               | command MINUS MINUS ID\n    comment : HASHTAG IDinsertion : command ID INSERTION ID\n\t\t             | command STRING INSERTION IDpipe_command : command PIPE commandwhile_statement : WHILE condition SEMICOLON DO statements DONEcondition : LEFT_BRACKET expression RIGHT_BRACKET\n\t\t             | CLEFT_BRACKET expression CRIGHT_BRACKET\n\t\tarithmetic_expression : NUMBER\n\t                         | DOLLAR ID\n\t\t\t\t\t\t\t\t\t\t\t\t\t | ID\n                           | LPAREN arithmetic_expression RPAREN\n                           | arithmetic_expression PLUS arithmetic_expression\n                           | arithmetic_expression MINUS arithmetic_expression\n                           | arithmetic_expression TIMES arithmetic_expression\n                           | arithmetic_expression DIVIDE arithmetic_expression\n                           | arithmetic_expression PLUS EQUALS arithmetic_expression\n                           | arithmetic_expression MINUS EQUALS arithmetic_expression\n                           | arithmetic_expression TIMES EQUALS arithmetic_expression\n                           | arithmetic_expression DIVIDE EQUALS arithmetic_expression\n\tfor_statement : FOR ID IN command DO statements DONEif_statement : IF condition SEMICOLON THEN statements ELSE statements FI \n\t\t\t\t\t\t\t\t\t| IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI\n\t'
    
_lr_action_items = {'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,69,72,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,97,98,99,100,101,104,105,106,108,109,110,111,113,114,116,117,118,119,120,],[14,14,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,-3,-30,-31,-32,-6,-7,-8,-43,-44,-35,-33,-38,-28,-46,-47,-48,-49,-4,-40,-12,-11,-9,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,14,14,-13,-15,-14,-17,14,14,14,-16,-39,14,14,-5,-29,14,-54,-55,14,14,14,14,-56,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,69,72,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,97,98,99,100,101,104,105,106,108,109,110,111,113,114,116,117,118,119,120,],[15,15,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,-3,-30,-31,-32,-6,-7,-8,-43,-44,-35,-33,-38,-28,-46,-47,-48,-49,-4,-40,-12,-11,-9,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,15,15,-13,-15,-14,-17,15,15,15,-16,-39,15,15,-5,-29,15,-54,-55,15,15,15,15,-56,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,69,72,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,97,98,99,100,101,104,105,106,108,109,110,111,113,114,116,117,118,119,120,],[16,16,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,-3,-30,-31,-32,-6,-7,-8,-43,-44,-35,-33,-38,-28,-46,-47,-48,-49,-4,-40,-12,-11,-9,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,16,16,-13,-15,-14,-17,16,16,16,-16,-39,16,16,-5,-29,16,-54,-55,16,16,16,16,-56,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,38,41,42,43,44,45,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,70,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,104,105,106,108,109,110,111,113,114,116,117,118,119,120,],[17,17,-2,-18,-19,-20,26,-22,-23,-24,-25,-26,-27,37,-28,-42,43,43,48,50,51,-3,-30,-31,-32,55,57,50,50,50,50,43,43,-7,-8,76,43,43,-43,-44,-35,81,82,83,-33,84,-28,-46,50,-47,50,-48,50,-49,50,57,-4,76,-40,43,96,-11,43,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,17,17,84,50,-13,43,-14,-17,17,17,17,-16,-39,17,17,-5,-29,17,-54,-55,17,17,17,17,-56,]),'LEFT_BRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,30,41,42,43,48,50,51,55,56,57,58,60,62,64,68,69,72,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,97,98,99,100,101,104,105,106,108,109,110,111,113,114,116,117,118,119,120,],[18,18,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,-3,-30,-31,-32,18,-6,-7,-8,-43,-44,-35,-33,-38,-28,-46,-47,-48,-49,18,-4,-40,-12,-11,-9,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,18,18,-13,-15,-14,-17,18,18,18,-16,-39,18,18,-5,-29,18,-54,-55,18,18,18,18,-56,]),'LEFT_BRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,69,72,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,113,114,116,117,118,119,120,],[20,20,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,20,20,-28,-42,-3,-30,-31,-32,-6,-7,-8,-43,-44,-35,-33,-38,-28,-46,-47,-48,-49,-4,-40,-12,-11,-9,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,20,20,-13,-15,-14,-17,20,20,20,-16,-39,20,20,20,-5,-29,20,-54,-55,20,20,20,20,-56,]),'CLEFT_BRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,69,72,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,113,114,116,117,118,119,120,],[21,21,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,21,21,-28,-42,-3,-30,-31,-32,-6,-7,-8,-43,-44,-35,-33,-38,-28,-46,-47,-48,-49,-4,-40,-12,-11,-9,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,21,21,-13,-15,-14,-17,21,21,21,-16,-39,21,21,21,-5,-29,21,-54,-55,21,21,21,21,-56,]),'HASHTAG':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,69,72,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,95,96,97,98,99,100,101,104,105,106,108,109,110,111,113,114,116,117,118,119,120,],[24,24,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,-3,-30,-31,-32,-6,-7,-8,-43,-44,-35,-33,-38,-28,-46,-47,-48,-49,-4,-40,-12,-11,-9,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,24,24,-13,-15,-14,-17,24,24,24,-16,-39,24,24,-5,-29,24,-54,-55,24,24,24,24,-56,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,21,23,25,26,27,28,31,32,33,34,38,40,41,42,43,45,46,47,48,50,51,55,56,57,58,59,60,61,62,63,64,65,69,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,108,109,110,111,113,114,116,117,118,119,120,],[19,19,-2,-18,-19,-20,27,-22,-23,-24,-25,-26,-27,-28,39,-42,41,41,19,-3,-30,-31,-32,19,19,19,19,41,73,41,-7,-8,41,41,73,-43,-44,-35,-33,27,-28,-46,19,-47,19,-48,19,-49,19,73,-40,41,73,41,73,73,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,19,19,27,19,103,73,41,73,-17,19,19,19,73,-39,19,19,-5,-29,19,-54,-55,19,19,19,19,-56,]),'DOLLAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,20,21,23,25,26,27,28,31,32,33,34,38,40,41,42,43,45,46,47,48,50,51,55,56,57,58,59,60,61,62,63,64,65,69,72,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,95,96,97,98,99,100,101,104,105,106,108,109,110,111,113,114,116,117,118,119,120,],[22,22,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,44,44,22,-3,-30,-31,-32,22,22,22,22,70,74,44,-7,-8,44,44,74,-43,-44,-35,-33,-38,-28,-46,22,-47,22,-48,22,-49,22,74,-40,44,74,44,74,74,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,22,22,22,74,44,74,-17,22,22,22,74,-39,22,22,-5,-29,22,-54,-55,22,22,22,22,-56,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,20,21,23,25,26,27,28,31,32,33,34,38,41,42,43,45,46,48,50,51,55,56,57,58,59,60,61,62,63,64,65,69,70,72,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,93,95,96,97,98,99,100,101,104,105,106,108,109,110,111,113,114,116,117,118,119,120,],[23,23,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,46,46,23,-3,-30,-31,-32,23,23,23,23,46,46,-7,-8,46,46,-43,-44,-35,-33,-38,-28,-46,23,-47,23,-48,23,-49,23,-4,93,-40,46,-11,46,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,23,23,23,-13,46,-14,-17,23,23,23,-16,-39,23,23,-5,-29,23,-54,-55,23,23,23,23,-56,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,69,72,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,104,105,109,110,113,114,120,],[0,-1,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,-3,-30,-31,-32,-6,-7,-8,-43,-44,-35,-33,-38,-28,-46,-47,-48,-49,-4,-40,-12,-11,-9,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,-13,-15,-14,-17,-16,-39,-5,-29,-54,-55,-56,]),'DONE':([3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,69,72,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,99,104,105,108,109,110,113,114,120,],[-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,-3,-30,-31,-32,-6,-7,-8,-43,-44,-35,-33,-38,-28,-46,-47,-48,-49,-4,-40,-12,-11,-9,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,-13,-15,-14,-17,105,-16,-39,113,-5,-29,-54,-55,-56,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,69,72,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,100,104,105,109,110,113,114,117,120,],[-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,-3,-30,-31,-32,-6,-7,-8,-43,-44,-35,-33,-38,-28,-46,-47,-48,-49,-4,-40,-12,-11,-9,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,-13,-15,-14,-17,106,-16,-39,-5,-29,-54,-55,118,-56,]),'ELIF':([3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,69,72,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,100,104,105,109,110,113,114,120,],[-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,-3,-30,-31,-32,-6,-7,-8,-43,-44,-35,-33,-38,-28,-46,-47,-48,-49,-4,-40,-12,-11,-9,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,-13,-15,-14,-17,107,-16,-39,-5,-29,-54,-55,-56,]),'FI':([3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,69,72,73,75,76,77,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,104,105,109,110,111,113,114,119,120,],[-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-42,-3,-30,-31,-32,-6,-7,-8,-43,-44,-35,-33,-38,-28,-46,-47,-48,-49,-4,-40,-12,-11,-9,-10,-41,-45,-36,-37,-34,-30,-32,-50,-51,-52,-53,-13,-15,-14,-17,-16,-39,-5,-29,114,-54,-55,120,-56,]),'STRING':([7,17,20,21,26,27,28,38,41,45,46,55,56,57,73,76,83,84,85,92,96,110,],[28,-28,42,42,-30,-31,-32,42,42,42,42,-33,85,-28,42,42,-34,-30,-32,85,42,-29,]),'MINUS':([7,11,17,19,20,21,26,27,28,29,38,41,45,46,48,49,50,55,56,57,58,60,62,64,73,76,80,83,84,85,86,87,88,89,92,96,102,110,],[29,32,-28,-42,45,45,-30,-31,-32,54,45,45,45,45,-43,32,-44,-33,29,-28,32,32,32,32,45,45,-45,-34,-30,-32,32,32,32,32,29,45,32,-29,]),'PIPE':([7,17,26,27,28,55,83,110,],[30,-28,-30,-31,-32,-33,-34,-29,]),'PLUS':([11,17,19,48,49,50,58,60,62,64,80,86,87,88,89,102,],[31,-44,-42,-43,31,-44,31,31,31,31,-45,31,31,31,31,31,]),'TIMES':([11,17,19,48,49,50,58,60,62,64,80,86,87,88,89,102,],[33,-44,-42,-43,33,-44,33,33,33,33,-45,33,33,33,33,33,]),'DIVIDE':([11,17,19,48,49,50,58,60,62,64,80,86,87,88,89,102,],[34,-44,-42,-43,34,-44,34,34,34,34,-45,34,34,34,34,34,]),'EQUALS':([17,31,32,33,34,],[38,59,61,63,65,]),'RPAREN':([19,41,42,43,48,49,50,58,60,62,64,73,75,76,77,78,80,86,87,88,89,95,96,97,98,102,104,],[-42,-6,-7,-8,-43,80,-44,-46,-47,-48,-49,-12,-11,-9,-10,98,-45,-50,-51,-52,-53,-13,-15,-14,-17,109,-16,]),'INSERTION':([26,28,],[52,53,]),'DO':([27,55,57,66,83,84,85,92,110,],[-31,-33,-28,90,-34,-30,-32,101,-29,]),'SEMICOLON':([35,36,72,79,112,],[66,67,-40,-41,115,]),'IN':([37,],[68,]),'DOT':([39,71,],[71,94,]),'RIGHT_BRACKET':([40,41,42,43,73,75,76,77,95,96,97,98,104,],[72,-6,-7,-8,-12,-11,-9,-10,-13,-15,-14,-17,-16,]),'CRIGHT_BRACKET':([41,42,43,47,73,75,76,77,95,96,97,98,104,],[-6,-7,-8,79,-12,-11,-9,-10,-13,-15,-14,-17,-16,]),'THEN':([67,115,],[91,116,]),'RIGHT_BRACE':([103,],[110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,90,91,101,106,116,118,],[2,99,100,108,111,117,119,]),'statement':([0,2,90,91,99,100,101,106,108,111,116,117,118,119,],[3,25,3,3,25,25,3,3,25,25,3,25,3,25,]),'while_statement':([0,2,90,91,99,100,101,106,108,111,116,117,118,119,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'if_statement':([0,2,90,91,99,100,101,106,108,111,116,117,118,119,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'for_statement':([0,2,90,91,99,100,101,106,108,111,116,117,118,119,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'command':([0,2,30,68,90,91,99,100,101,106,108,111,116,117,118,119,],[7,7,56,92,7,7,7,7,7,7,7,7,7,7,7,7,]),'condition':([0,2,14,15,90,91,99,100,101,106,107,108,111,116,117,118,119,],[8,8,35,36,8,8,8,8,8,8,112,8,8,8,8,8,8,]),'assignment':([0,2,90,91,99,100,101,106,108,111,116,117,118,119,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'comment':([0,2,90,91,99,100,101,106,108,111,116,117,118,119,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'arithmetic_expression':([0,2,23,31,32,33,34,59,61,63,65,90,91,93,99,100,101,106,108,111,116,117,118,119,],[11,11,49,58,60,62,64,86,87,88,89,11,11,102,11,11,11,11,11,11,11,11,11,11,]),'insertion':([0,2,90,91,99,100,101,106,108,111,116,117,118,119,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'pipe_command':([0,2,90,91,99,100,101,106,108,111,116,117,118,119,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'expression':([20,21,38,41,45,46,73,76,96,],[40,47,69,75,77,78,95,97,104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','yaccFile.py',12),
  ('statements -> statement','statements',1,'p_statements','yaccFile.py',17),
  ('statements -> statements statement','statements',2,'p_statements','yaccFile.py',18),
  ('assignment -> ID EQUALS expression','assignment',3,'p_assignment','yaccFile.py',26),
  ('assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN','assignment',6,'p_assignment','yaccFile.py',27),
  ('expression -> NUMBER','expression',1,'p_expression','yaccFile.py',36),
  ('expression -> STRING','expression',1,'p_expression','yaccFile.py',37),
  ('expression -> ID','expression',1,'p_expression','yaccFile.py',38),
  ('expression -> DOLLAR ID','expression',2,'p_expression','yaccFile.py',39),
  ('expression -> MINUS expression','expression',2,'p_expression','yaccFile.py',40),
  ('expression -> NUMBER expression','expression',2,'p_expression','yaccFile.py',41),
  ('expression -> expression NUMBER','expression',2,'p_expression','yaccFile.py',42),
  ('expression -> expression NUMBER expression','expression',3,'p_expression','yaccFile.py',43),
  ('expression -> DOLLAR ID expression','expression',3,'p_expression','yaccFile.py',44),
  ('expression -> expression DOLLAR ID','expression',3,'p_expression','yaccFile.py',45),
  ('expression -> expression DOLLAR ID expression','expression',4,'p_expression','yaccFile.py',46),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','yaccFile.py',47),
  ('statement -> while_statement','statement',1,'p_statement','yaccFile.py',54),
  ('statement -> if_statement','statement',1,'p_statement','yaccFile.py',55),
  ('statement -> for_statement','statement',1,'p_statement','yaccFile.py',56),
  ('statement -> command','statement',1,'p_statement','yaccFile.py',57),
  ('statement -> condition','statement',1,'p_statement','yaccFile.py',58),
  ('statement -> assignment','statement',1,'p_statement','yaccFile.py',59),
  ('statement -> comment','statement',1,'p_statement','yaccFile.py',60),
  ('statement -> arithmetic_expression','statement',1,'p_statement','yaccFile.py',61),
  ('statement -> insertion','statement',1,'p_statement','yaccFile.py',62),
  ('statement -> pipe_command','statement',1,'p_statement','yaccFile.py',63),
  ('command -> ID','command',1,'p_command','yaccFile.py',67),
  ('command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE','command',6,'p_command','yaccFile.py',69),
  ('command -> command ID','command',2,'p_command','yaccFile.py',70),
  ('command -> command NUMBER','command',2,'p_command','yaccFile.py',71),
  ('command -> command STRING','command',2,'p_command','yaccFile.py',72),
  ('command -> command MINUS ID','command',3,'p_command','yaccFile.py',73),
  ('command -> command MINUS MINUS ID','command',4,'p_command','yaccFile.py',74),
  ('comment -> HASHTAG ID','comment',2,'p_comment','yaccFile.py',93),
  ('insertion -> command ID INSERTION ID','insertion',4,'p_insertion','yaccFile.py',97),
  ('insertion -> command STRING INSERTION ID','insertion',4,'p_insertion','yaccFile.py',98),
  ('pipe_command -> command PIPE command','pipe_command',3,'p_pipe_command','yaccFile.py',102),
  ('while_statement -> WHILE condition SEMICOLON DO statements DONE','while_statement',6,'p_while_statement','yaccFile.py',106),
  ('condition -> LEFT_BRACKET expression RIGHT_BRACKET','condition',3,'p_condition','yaccFile.py',110),
  ('condition -> CLEFT_BRACKET expression CRIGHT_BRACKET','condition',3,'p_condition','yaccFile.py',111),
  ('arithmetic_expression -> NUMBER','arithmetic_expression',1,'p_arithmetic_expression','yaccFile.py',117),
  ('arithmetic_expression -> DOLLAR ID','arithmetic_expression',2,'p_arithmetic_expression','yaccFile.py',118),
  ('arithmetic_expression -> ID','arithmetic_expression',1,'p_arithmetic_expression','yaccFile.py',119),
  ('arithmetic_expression -> LPAREN arithmetic_expression RPAREN','arithmetic_expression',3,'p_arithmetic_expression','yaccFile.py',120),
  ('arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','yaccFile.py',121),
  ('arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','yaccFile.py',122),
  ('arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','yaccFile.py',123),
  ('arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','yaccFile.py',124),
  ('arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression','arithmetic_expression',4,'p_arithmetic_expression','yaccFile.py',125),
  ('arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression','arithmetic_expression',4,'p_arithmetic_expression','yaccFile.py',126),
  ('arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression','arithmetic_expression',4,'p_arithmetic_expression','yaccFile.py',127),
  ('arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression','arithmetic_expression',4,'p_arithmetic_expression','yaccFile.py',128),
  ('for_statement -> FOR ID IN command DO statements DONE','for_statement',7,'p_for_statement','yaccFile.py',137),
  ('if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI','if_statement',8,'p_if_statement','yaccFile.py',142),
  ('if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI','if_statement',13,'p_if_statement','yaccFile.py',143),
]
