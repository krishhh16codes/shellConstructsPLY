
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programAND CASE CLEFT_BRACKET COPROC CRIGHT_BRACKET DIVIDE DO DOLLAR DONE DOT ELIF ELSE EQUALS EQUALTO ESAC EXCLAMATION_MARK FI FOR FUNCTION GREATERTHAN HASHTAG ID IF IN INSERTION LEFT_BRACE LEFT_BRACKET LESSTHAN LPAREN MINUS NUMBER PIPE PLUS RIGHT_BRACE RIGHT_BRACKET RPAREN SELECT SEMICOLON SPACE STRING THEN TIME TIMES UNTIL WHILEprogram : statementsstatements : statement\n                | statements statementassignment : ID EQUALS expression\n                | ID EQUALS DOLLAR LPAREN arithmetic_expression RPARENexpression : NUMBER\n\t           | STRING\n             | ID\n\t           | DOLLAR ID\n             | MINUS expression\n             | NUMBER expression\n\t\t         | expression NUMBER\n             | expression NUMBER expression\n\t           | DOLLAR ID expression\n\t           | expression DOLLAR ID \n\t           | expression DOLLAR ID expression\n             | LPAREN expression RPARENstatement : while_statement\n               | if_statement\n               | for_statement\n               | command\n\t             | condition\n               | assignment\n               | comment\n\t             | arithmetic_expression\n               | insertion\n               | pipe_commandcommand : ID\n             | LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE\n             | command ID\n             | command NUMBER\n             | command STRING\n             | command MINUS ID\n             | command MINUS MINUS IDcomment : HASHTAG IDinsertion : command ID INSERTION ID\n\t\t           | command STRING INSERTION IDpipe_command : command PIPE commandwhile_statement : WHILE condition DO statements DONE\n\t                   | WHILE condition SEMICOLON DO statements DONEcondition : LEFT_BRACKET expression RIGHT_BRACKET\n\t\t           | CLEFT_BRACKET expression CRIGHT_BRACKETarithmetic_expression : NUMBER\n\t                         | DOLLAR ID\n\t                         | ID\n                           | LPAREN arithmetic_expression RPAREN\n                           | arithmetic_expression PLUS arithmetic_expression\n                           | arithmetic_expression MINUS arithmetic_expression\n                           | arithmetic_expression TIMES arithmetic_expression\n                           | arithmetic_expression DIVIDE arithmetic_expression\n                           | arithmetic_expression PLUS EQUALS arithmetic_expression\n                           | arithmetic_expression MINUS EQUALS arithmetic_expression\n                           | arithmetic_expression TIMES EQUALS arithmetic_expression\n                           | arithmetic_expression DIVIDE EQUALS arithmetic_expressionfor_statement : FOR ID IN command DO statements DONEif_statement : IF condition SEMICOLON THEN statements ELSE statements FI \n\t                | IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI\n\t'
    
_lr_action_items = {'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,66,70,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,103,104,107,108,109,111,112,113,114,116,117,119,120,121,122,123,],[14,14,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,-3,-30,-31,-32,-6,-7,-8,-44,-45,-35,-33,-38,-28,-47,-48,-49,-50,14,-4,-41,-12,-11,-9,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,14,14,14,-13,-15,-14,-17,-39,14,14,14,-16,-40,14,14,-5,-29,14,-55,-56,14,14,14,14,-57,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,66,70,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,103,104,107,108,109,111,112,113,114,116,117,119,120,121,122,123,],[15,15,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,-3,-30,-31,-32,-6,-7,-8,-44,-45,-35,-33,-38,-28,-47,-48,-49,-50,15,-4,-41,-12,-11,-9,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,15,15,15,-13,-15,-14,-17,-39,15,15,15,-16,-40,15,15,-5,-29,15,-55,-56,15,15,15,15,-57,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,66,70,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,103,104,107,108,109,111,112,113,114,116,117,119,120,121,122,123,],[16,16,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,-3,-30,-31,-32,-6,-7,-8,-44,-45,-35,-33,-38,-28,-47,-48,-49,-50,16,-4,-41,-12,-11,-9,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,16,16,16,-13,-15,-14,-17,-39,16,16,16,-16,-40,16,16,-5,-29,16,-55,-56,16,16,16,16,-57,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,38,41,42,43,44,45,46,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,107,108,109,111,112,113,114,116,117,119,120,121,122,123,],[17,17,-2,-18,-19,-20,26,-22,-23,-24,-25,-26,-27,37,-28,-43,43,43,48,50,51,-3,-30,-31,-32,55,57,50,50,50,50,43,43,-7,-8,77,43,43,-44,-45,-35,82,83,84,-33,85,-28,-47,50,-48,50,-49,50,-50,50,17,57,-4,77,-41,43,98,-11,43,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,17,17,17,85,50,-13,43,-14,-17,-39,17,17,17,-16,-40,17,17,-5,-29,17,-55,-56,17,17,17,17,-57,]),'LEFT_BRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,30,41,42,43,48,50,51,55,56,57,58,60,62,64,66,69,70,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,103,104,107,108,109,111,112,113,114,116,117,119,120,121,122,123,],[18,18,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,-3,-30,-31,-32,18,-6,-7,-8,-44,-45,-35,-33,-38,-28,-47,-48,-49,-50,18,18,-4,-41,-12,-11,-9,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,18,18,18,-13,-15,-14,-17,-39,18,18,18,-16,-40,18,18,-5,-29,18,-55,-56,18,18,18,18,-57,]),'LEFT_BRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,66,70,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,116,117,119,120,121,122,123,],[20,20,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,20,20,-28,-43,-3,-30,-31,-32,-6,-7,-8,-44,-45,-35,-33,-38,-28,-47,-48,-49,-50,20,-4,-41,-12,-11,-9,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,20,20,20,-13,-15,-14,-17,-39,20,20,20,-16,-40,20,20,20,-5,-29,20,-55,-56,20,20,20,20,-57,]),'CLEFT_BRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,66,70,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,116,117,119,120,121,122,123,],[21,21,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,21,21,-28,-43,-3,-30,-31,-32,-6,-7,-8,-44,-45,-35,-33,-38,-28,-47,-48,-49,-50,21,-4,-41,-12,-11,-9,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,21,21,21,-13,-15,-14,-17,-39,21,21,21,-16,-40,21,21,21,-5,-29,21,-55,-56,21,21,21,21,-57,]),'HASHTAG':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,66,70,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,99,100,101,102,103,104,107,108,109,111,112,113,114,116,117,119,120,121,122,123,],[24,24,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,-3,-30,-31,-32,-6,-7,-8,-44,-45,-35,-33,-38,-28,-47,-48,-49,-50,24,-4,-41,-12,-11,-9,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,24,24,24,-13,-15,-14,-17,-39,24,24,24,-16,-40,24,24,-5,-29,24,-55,-56,24,24,24,24,-57,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,21,23,25,26,27,28,31,32,33,34,38,40,41,42,43,45,46,47,48,50,51,55,56,57,58,59,60,61,62,63,64,65,66,70,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,111,112,113,114,116,117,119,120,121,122,123,],[19,19,-2,-18,-19,-20,27,-22,-23,-24,-25,-26,-27,-28,39,-43,41,41,19,-3,-30,-31,-32,19,19,19,19,41,74,41,-7,-8,41,41,74,-44,-45,-35,-33,27,-28,-47,19,-48,19,-49,19,-50,19,19,74,-41,41,74,41,74,74,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,19,19,19,27,19,106,74,41,74,-17,-39,19,19,19,74,-40,19,19,-5,-29,19,-55,-56,19,19,19,19,-57,]),'DOLLAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,20,21,23,25,26,27,28,31,32,33,34,38,40,41,42,43,45,46,47,48,50,51,55,56,57,58,59,60,61,62,63,64,65,66,70,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,102,103,104,107,108,109,111,112,113,114,116,117,119,120,121,122,123,],[22,22,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,44,44,22,-3,-30,-31,-32,22,22,22,22,71,75,44,-7,-8,44,44,75,-44,-45,-35,-33,-38,-28,-47,22,-48,22,-49,22,-50,22,22,75,-41,44,75,44,75,75,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,22,22,22,22,75,44,75,-17,-39,22,22,22,75,-40,22,22,-5,-29,22,-55,-56,22,22,22,22,-57,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,19,20,21,23,25,26,27,28,31,32,33,34,38,41,42,43,45,46,48,50,51,55,56,57,58,59,60,61,62,63,64,65,66,70,71,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,97,98,99,100,101,102,103,104,107,108,109,111,112,113,114,116,117,119,120,121,122,123,],[23,23,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,46,46,23,-3,-30,-31,-32,23,23,23,23,46,46,-7,-8,46,46,-44,-45,-35,-33,-38,-28,-47,23,-48,23,-49,23,-50,23,23,-4,95,-41,46,-11,46,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,23,23,23,23,-13,46,-14,-17,-39,23,23,23,-16,-40,23,23,-5,-29,23,-55,-56,23,23,23,23,-57,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,70,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,107,108,112,113,116,117,123,],[0,-1,-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,-3,-30,-31,-32,-6,-7,-8,-44,-45,-35,-33,-38,-28,-47,-48,-49,-50,-4,-41,-12,-11,-9,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,-13,-15,-14,-17,-39,-16,-40,-5,-29,-55,-56,-57,]),'DONE':([3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,70,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,97,98,99,100,101,102,107,108,111,112,113,116,117,123,],[-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,-3,-30,-31,-32,-6,-7,-8,-44,-45,-35,-33,-38,-28,-47,-48,-49,-50,-4,-41,-12,-11,-9,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,101,-13,-15,-14,-17,-39,108,-16,-40,116,-5,-29,-55,-56,-57,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,70,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,103,107,108,112,113,116,117,120,123,],[-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,-3,-30,-31,-32,-6,-7,-8,-44,-45,-35,-33,-38,-28,-47,-48,-49,-50,-4,-41,-12,-11,-9,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,-13,-15,-14,-17,-39,109,-16,-40,-5,-29,-55,-56,121,-57,]),'ELIF':([3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,70,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,103,107,108,112,113,116,117,123,],[-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,-3,-30,-31,-32,-6,-7,-8,-44,-45,-35,-33,-38,-28,-47,-48,-49,-50,-4,-41,-12,-11,-9,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,-13,-15,-14,-17,-39,110,-16,-40,-5,-29,-55,-56,-57,]),'FI':([3,4,5,6,7,8,9,10,11,12,13,17,19,25,26,27,28,41,42,43,48,50,51,55,56,57,58,60,62,64,70,73,74,76,77,78,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,107,108,112,113,114,116,117,122,123,],[-2,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-43,-3,-30,-31,-32,-6,-7,-8,-44,-45,-35,-33,-38,-28,-47,-48,-49,-50,-4,-41,-12,-11,-9,-10,-42,-46,-36,-37,-34,-30,-32,-51,-52,-53,-54,-13,-15,-14,-17,-39,-16,-40,-5,-29,117,-55,-56,123,-57,]),'STRING':([7,17,20,21,26,27,28,38,41,45,46,55,56,57,74,77,84,85,86,94,98,113,],[28,-28,42,42,-30,-31,-32,42,42,42,42,-33,86,-28,42,42,-34,-30,-32,86,42,-29,]),'MINUS':([7,11,17,19,20,21,26,27,28,29,38,41,45,46,48,49,50,55,56,57,58,60,62,64,74,77,81,84,85,86,87,88,89,90,94,98,105,113,],[29,32,-28,-43,45,45,-30,-31,-32,54,45,45,45,45,-44,32,-45,-33,29,-28,32,32,32,32,45,45,-46,-34,-30,-32,32,32,32,32,29,45,32,-29,]),'PIPE':([7,17,26,27,28,55,84,113,],[30,-28,-30,-31,-32,-33,-34,-29,]),'PLUS':([11,17,19,48,49,50,58,60,62,64,81,87,88,89,90,105,],[31,-45,-43,-44,31,-45,31,31,31,31,-46,31,31,31,31,31,]),'TIMES':([11,17,19,48,49,50,58,60,62,64,81,87,88,89,90,105,],[33,-45,-43,-44,33,-45,33,33,33,33,-46,33,33,33,33,33,]),'DIVIDE':([11,17,19,48,49,50,58,60,62,64,81,87,88,89,90,105,],[34,-45,-43,-44,34,-45,34,34,34,34,-46,34,34,34,34,34,]),'EQUALS':([17,31,32,33,34,],[38,59,61,63,65,]),'RPAREN':([19,41,42,43,48,49,50,58,60,62,64,74,76,77,78,79,81,87,88,89,90,97,98,99,100,105,107,],[-43,-6,-7,-8,-44,81,-45,-47,-48,-49,-50,-12,-11,-9,-10,100,-46,-51,-52,-53,-54,-13,-15,-14,-17,112,-16,]),'INSERTION':([26,28,],[52,53,]),'DO':([27,35,55,57,67,73,80,84,85,86,94,113,],[-31,66,-33,-28,92,-41,-42,-34,-30,-32,104,-29,]),'SEMICOLON':([35,36,73,80,115,],[67,68,-41,-42,118,]),'IN':([37,],[69,]),'DOT':([39,72,],[72,96,]),'RIGHT_BRACKET':([40,41,42,43,74,76,77,78,97,98,99,100,107,],[73,-6,-7,-8,-12,-11,-9,-10,-13,-15,-14,-17,-16,]),'CRIGHT_BRACKET':([41,42,43,47,74,76,77,78,97,98,99,100,107,],[-6,-7,-8,80,-12,-11,-9,-10,-13,-15,-14,-17,-16,]),'THEN':([68,118,],[93,119,]),'RIGHT_BRACE':([106,],[113,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,66,92,93,104,109,119,121,],[2,91,102,103,111,114,120,122,]),'statement':([0,2,66,91,92,93,102,103,104,109,111,114,119,120,121,122,],[3,25,3,25,3,3,25,25,3,3,25,25,3,25,3,25,]),'while_statement':([0,2,66,91,92,93,102,103,104,109,111,114,119,120,121,122,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'if_statement':([0,2,66,91,92,93,102,103,104,109,111,114,119,120,121,122,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'for_statement':([0,2,66,91,92,93,102,103,104,109,111,114,119,120,121,122,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'command':([0,2,30,66,69,91,92,93,102,103,104,109,111,114,119,120,121,122,],[7,7,56,7,94,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'condition':([0,2,14,15,66,91,92,93,102,103,104,109,110,111,114,119,120,121,122,],[8,8,35,36,8,8,8,8,8,8,8,8,115,8,8,8,8,8,8,]),'assignment':([0,2,66,91,92,93,102,103,104,109,111,114,119,120,121,122,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'comment':([0,2,66,91,92,93,102,103,104,109,111,114,119,120,121,122,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'arithmetic_expression':([0,2,23,31,32,33,34,59,61,63,65,66,91,92,93,95,102,103,104,109,111,114,119,120,121,122,],[11,11,49,58,60,62,64,87,88,89,90,11,11,11,11,105,11,11,11,11,11,11,11,11,11,11,]),'insertion':([0,2,66,91,92,93,102,103,104,109,111,114,119,120,121,122,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'pipe_command':([0,2,66,91,92,93,102,103,104,109,111,114,119,120,121,122,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'expression':([20,21,38,41,45,46,74,77,98,],[40,47,70,76,78,79,97,99,107,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','yaccFile.py',16),
  ('statements -> statement','statements',1,'p_statements','yaccFile.py',21),
  ('statements -> statements statement','statements',2,'p_statements','yaccFile.py',22),
  ('assignment -> ID EQUALS expression','assignment',3,'p_assignment','yaccFile.py',31),
  ('assignment -> ID EQUALS DOLLAR LPAREN arithmetic_expression RPAREN','assignment',6,'p_assignment','yaccFile.py',32),
  ('expression -> NUMBER','expression',1,'p_expression','yaccFile.py',40),
  ('expression -> STRING','expression',1,'p_expression','yaccFile.py',41),
  ('expression -> ID','expression',1,'p_expression','yaccFile.py',42),
  ('expression -> DOLLAR ID','expression',2,'p_expression','yaccFile.py',43),
  ('expression -> MINUS expression','expression',2,'p_expression','yaccFile.py',44),
  ('expression -> NUMBER expression','expression',2,'p_expression','yaccFile.py',45),
  ('expression -> expression NUMBER','expression',2,'p_expression','yaccFile.py',46),
  ('expression -> expression NUMBER expression','expression',3,'p_expression','yaccFile.py',47),
  ('expression -> DOLLAR ID expression','expression',3,'p_expression','yaccFile.py',48),
  ('expression -> expression DOLLAR ID','expression',3,'p_expression','yaccFile.py',49),
  ('expression -> expression DOLLAR ID expression','expression',4,'p_expression','yaccFile.py',50),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','yaccFile.py',51),
  ('statement -> while_statement','statement',1,'p_statement','yaccFile.py',58),
  ('statement -> if_statement','statement',1,'p_statement','yaccFile.py',59),
  ('statement -> for_statement','statement',1,'p_statement','yaccFile.py',60),
  ('statement -> command','statement',1,'p_statement','yaccFile.py',61),
  ('statement -> condition','statement',1,'p_statement','yaccFile.py',62),
  ('statement -> assignment','statement',1,'p_statement','yaccFile.py',63),
  ('statement -> comment','statement',1,'p_statement','yaccFile.py',64),
  ('statement -> arithmetic_expression','statement',1,'p_statement','yaccFile.py',65),
  ('statement -> insertion','statement',1,'p_statement','yaccFile.py',66),
  ('statement -> pipe_command','statement',1,'p_statement','yaccFile.py',67),
  ('command -> ID','command',1,'p_command','yaccFile.py',72),
  ('command -> LEFT_BRACE NUMBER DOT DOT NUMBER RIGHT_BRACE','command',6,'p_command','yaccFile.py',73),
  ('command -> command ID','command',2,'p_command','yaccFile.py',74),
  ('command -> command NUMBER','command',2,'p_command','yaccFile.py',75),
  ('command -> command STRING','command',2,'p_command','yaccFile.py',76),
  ('command -> command MINUS ID','command',3,'p_command','yaccFile.py',77),
  ('command -> command MINUS MINUS ID','command',4,'p_command','yaccFile.py',78),
  ('comment -> HASHTAG ID','comment',2,'p_comment','yaccFile.py',100),
  ('insertion -> command ID INSERTION ID','insertion',4,'p_insertion','yaccFile.py',105),
  ('insertion -> command STRING INSERTION ID','insertion',4,'p_insertion','yaccFile.py',106),
  ('pipe_command -> command PIPE command','pipe_command',3,'p_pipe_command','yaccFile.py',112),
  ('while_statement -> WHILE condition DO statements DONE','while_statement',5,'p_while_statement','yaccFile.py',117),
  ('while_statement -> WHILE condition SEMICOLON DO statements DONE','while_statement',6,'p_while_statement','yaccFile.py',118),
  ('condition -> LEFT_BRACKET expression RIGHT_BRACKET','condition',3,'p_condition','yaccFile.py',124),
  ('condition -> CLEFT_BRACKET expression CRIGHT_BRACKET','condition',3,'p_condition','yaccFile.py',125),
  ('arithmetic_expression -> NUMBER','arithmetic_expression',1,'p_arithmetic_expression','yaccFile.py',131),
  ('arithmetic_expression -> DOLLAR ID','arithmetic_expression',2,'p_arithmetic_expression','yaccFile.py',132),
  ('arithmetic_expression -> ID','arithmetic_expression',1,'p_arithmetic_expression','yaccFile.py',133),
  ('arithmetic_expression -> LPAREN arithmetic_expression RPAREN','arithmetic_expression',3,'p_arithmetic_expression','yaccFile.py',134),
  ('arithmetic_expression -> arithmetic_expression PLUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','yaccFile.py',135),
  ('arithmetic_expression -> arithmetic_expression MINUS arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','yaccFile.py',136),
  ('arithmetic_expression -> arithmetic_expression TIMES arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','yaccFile.py',137),
  ('arithmetic_expression -> arithmetic_expression DIVIDE arithmetic_expression','arithmetic_expression',3,'p_arithmetic_expression','yaccFile.py',138),
  ('arithmetic_expression -> arithmetic_expression PLUS EQUALS arithmetic_expression','arithmetic_expression',4,'p_arithmetic_expression','yaccFile.py',139),
  ('arithmetic_expression -> arithmetic_expression MINUS EQUALS arithmetic_expression','arithmetic_expression',4,'p_arithmetic_expression','yaccFile.py',140),
  ('arithmetic_expression -> arithmetic_expression TIMES EQUALS arithmetic_expression','arithmetic_expression',4,'p_arithmetic_expression','yaccFile.py',141),
  ('arithmetic_expression -> arithmetic_expression DIVIDE EQUALS arithmetic_expression','arithmetic_expression',4,'p_arithmetic_expression','yaccFile.py',142),
  ('for_statement -> FOR ID IN command DO statements DONE','for_statement',7,'p_for_statement','yaccFile.py',151),
  ('if_statement -> IF condition SEMICOLON THEN statements ELSE statements FI','if_statement',8,'p_if_statement','yaccFile.py',156),
  ('if_statement -> IF condition SEMICOLON THEN statements ELIF condition SEMICOLON THEN statements ELSE statements FI','if_statement',13,'p_if_statement','yaccFile.py',157),
]
